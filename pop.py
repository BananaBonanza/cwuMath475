{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl280\partightenfactor0

\f0\fs24 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 \{\
 "cells": [\
  \{\
   "cell_type": "markdown",\
   "metadata": \{\},\
   "source": [\
    "### Justin Butler\\n",\
    "### Population Project\\n",\
    "### USA Data"\
   ]\
  \},\
  \{\
   "cell_type": "code",\
   "execution_count": 3,\
   "metadata": \{\},\
   "outputs": [\
    \{\
     "name": "stdout",\
     "output_type": "stream",\
     "text": [\
      "c =  -0.0234540094056\\n",\
      "d =  -0.634720038359\\n"\
     ]\
    \},\
    \{\
     "data": \{\
      "image/png": "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\\n",\
      "text/plain": [\
       "<matplotlib.figure.Figure at 0x88b9fd0>"\
      ]\
     \},\
     "metadata": \{\},\
     "output_type": "display_data"\
    \},\
    \{\
     "name": "stdout",\
     "output_type": "stream",\
     "text": [\
      "expR2 =  0.985918115979\\n",\
      "logR2 =  0.997520321806\\n",\
      "gompR2 =  0.999028317321\\n",\
      "Adjusted Exp R2 =  0.984509927577\\n",\
      "Adjusted Log R2 =  0.997128793671\\n",\
      "Adjusted Gomp R2 =  0.99887489374\\n",\
      "\\n",\
      "Exp P0 = 327.783072118\\n",\
      " Exp r = 0.0136356319963\\n",\
      "\\n",\
      "Log P0 = 303.819041867\\n",\
      " Log r = 0.0207764366954\\n",\
      " Log L = 486.47534526\\n",\
      "\\n",\
      "Gom P0 = 306.897916941\\n",\
      " Gom r = 0.00608489971242\\n",\
      " Gom L = 1389.52467514\\n",\
      " \\n",\
      "\\n",\
      "For the following values of 2010, I eliminated the data point for 2010 and recalculated the models\\n",\
      "for that year. The values were then compared by using the error function:\\n",\
      "\\n",\
      "\\u001b[1m Exponential \\u001b[0m\\n",\
      "Exponential estimation for 2010: 341.4\\n",\
      "Error from actual value of 2010: 10.59%\\n",\
      "\\n",\
      "\\u001b[1m Logistic \\u001b[0m\\n",\
      "   Logistic estimation for 2010: 297.0\\n",\
      "Error from actual value of 2010: 3.81%\\n",\
      "\\n",\
      "\\u001b[1m Gompertz \\u001b[0m\\n",\
      "   Gompertz estimation for 2010: 304.8\\n",\
      "Error from actual value of 2010: 1.29%\\n"\
     ]\
    \},\
    \{\
     "data": \{\
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAokAAAGSCAYAAACPLlvkAAAABHNCSVQICAgIfAhkiAAAAAlwSFlz\\nAAALEgAACxIB0t1+/AAAIABJREFUeJzs3Xd8FEX/wPHPN6SQgEgJPcagKEVQ1PBIkyIoKMUOIogo\\niFgeEBQEoiSICIIgVlSkPEgEAQtSLEiTEpCi8BNBUOm9CWIoKfP7YzbhcrmUgySXkO/79bpXcrOz\\ns7N7u3tz01aMMSillFJKKeXKz9cZUEoppZRS+Y8WEpVSSimlVDpaSFRKKaWUUuloIVEppZRSSqWj\\nhUSllFJKKZWOFhKVUkoppVQ6WkhUhZ6IFBcRIyJzfZ0XT0RkrYicKux5UDkvp859EanlpPNuTuUt\\np4jIG07eIr1YJ9/ujzcK6n7o/Sb/0EKiDzkXrzevrr7Oc165kBt7XhGRNll9sbrcnH/N5Ty8kBvp\\n5wQRaS0ic0TkgIgkiMgxEfldRKaLyFNucXP8y0xEjuTW8b9QzpdfyvXcPpN4o1ziFagv+IIgr38Y\\nOudiVvf3By4g3Xz9AzcjIjLLyXeor/OiMufv6wwUckM8hD0HXA68BfzttuyXXM+Ryo/uB4J8nQlv\\niMhrwEDgHDAf+AMwQFXgduAeYJzPMuh7iUB3YIb7AhEJBB514ug9+uK9DnwM7PBxPgBGAfEZLPst\\nF7a3FagBHM+FtHNTgbvnXar0BuRDxpgY9zCntvByYKwxZkceZ0nlQ8aYnb7OgzdEpAYwADgKNDDG\\nbHVbXgRbUCzM5gJ3i0gVY8x2t2V3A2WBL4F78zxnlxhjzGHgsK/z4RhpjDmSVxszxpwDtuTV9nJK\\nQbvnXcq0ubkASumvISLBIvKqiPwhIudSmqUya6rNqFnPpfq/rIj0FpHfROSMiOwXkXdFpFgGeYkQ\\nkfdF5E8n/hERWSUi/dzi3SEiE0Vki4j8IyLxIrJRRAaKSIBb3CPA887bNS7NMafc4hUXkcEi8n9O\\nev+IyDIRuS+DvBYVkaEiskNEzjp5fpk8/LHk+tmISCcRWScip53j9omIlPOwTpr+OSIyC5jjvHVt\\nlkzzmYvVVUR+FJETzufzq4i86H7MXdbpKiK/OHEPOJ9ZWS93sz4gwLfuBUQAY0ySMeZb12MC/J/z\\n9hlPTXDOud5bRL4TkV3O53dURL4VkeZu+9BGRAxQBrjOLT338762iMSKyF7nGtovIv8Tkas8HJtK\\nIvKWiGx1zrfjIrJZRCaIyBVeHqPxzjHq5mHZE9hWhJkZrSwipZ1z6Q+XYzFPRG7NIL7X576IBDrH\\nfI3LNbtWRJ7I7k5e7DFzru1THu4R65zP8y238LpO+PsuYWnuhyLyLPCPs7i12/mRrvuGiFwrIp+L\\n7S5xWuz9LVd/5Djn+wvOtfi3iPwrIttF5AsRaZzd/ZCs7/flROR5sfflM8558bxLvM4ist757A6I\\nyGixNd3u+W0vItOc8zHe+cx+EpGeIiIu8Yo71+b9TtBhlzz/6hLPY59EESkiIr2cPP3rbGeViDzu\\nIW5qU7yIVBCRySJyyNnPjSLS0cM6fiLyhIisFntPPi32fjNfRO7J/FO7NGlNYsHlh62NqAZ8h621\\nyYlfX+8BzYF5wLfYGp9ngCuBtq4RRaSRk4fLgYXYL7XLgOuAl7FNKykGAxWA1cBsoDhwK/Aa0EhE\\n2pjzDxIfiW2OrI/9Mt3nhJ9z2XZZYAlQE/jJiRcI3Al8LiIDjTEjXOL7AV87+/M78DYQAvwX8EW/\\nx/5AG+yxWAw0BDoDtUQk0hiTlMm6M7DHoiOwAFjpsmwf2AIiMA3ogG1mm4H9QmkEjAAai0hbY0xy\\nyopOoeEV7Lk0ETgFtAaWeblvR52/VUVETNYPiP8e+1k8BazBNk+nSGmCqwyMBlZgz/cjTlg7YIGI\\ndDLGTHPibsV25ejv7MP7Lun9lPKPiNwLTHfefg1sx57nHYE2InKrMeY3J24J7LlbycnvV0CAE/8B\\n4BNgdxb76Wq98+oqItEpn7eIVAFaOHk+7WlFsT8kVgJXO39nYq+t9kArEelqjPnEJb7X576IBGOv\\n/8bAJmf/Epy8fSQiNxtjema2gzl0zBYCvYFbgOVOuqWBOs7y5m7xm7usl5GfgOHY7hDbgE9dlq10\\ni3utsw+bgMlAOexxni8ijYwxq7PI/4X6DHu//dnZ7lns+d4YuA340cv9yMg47H14LvYzugd4w7l/\\nBDppz8bea+8E+gLJQD+3dEZjm7RXYu9BJbHn2zjgBuy1Dfa+NQR7DGuQtvn9UGYZdc7jz7E17duB\\nD4EiwH3ABBGpZ4zp4WHVssAqJ3/TgGLY++KnInLOGPO5S9yx2OtimxP3FPb8vcU5Nl9llsdLkjFG\\nX/nohf1CN0BEJnHWOnF+Akp6WP6GszzSw7JazrJ33cJnOeFbgYou4YEu26vpEh4C7MfeMO72sJ0w\\nt/dXZbAvbzppt87uPrjl9xm38BBgKbY/17Uu4T2c+AuBAJfw8sAeZ9ncbH5GbbKK73Kcf81gv466\\n5U+wN2MD3OXh8z6VQR5eyGD7zzrLpwJBbtsZ5Szr5hJewzlmB4BKLuH+wDdO/FMZ7a/btks554YB\\nfsD2r6sBFMnG8Xo3g+UhruelS3gZbH/HfYC/27Ij7sffZVkF7BfAfqCq27KbgTPAMpewjk7+hnpI\\nqyhQPJvHJuVaqgD0dP5v67L8VSfsBuyXkqdrNdYJH+PhGMY7r/IXc+67nKcjAD+382Gas6x5Zp9f\\nThwz7I8AA0S7hN3vhH2fcixdli3A3pNKe9iXSJew4p7228P+pLvGXLY/Izufucu5aLA/gGMyePk5\\ncSs6cZcC4paOAGUuYD8yut9vAcq5hJcDTjqvA8DVbtfgduBfoIRbeld72HYRl+1cl8H2QzO5Ttzv\\neU8466wAgl3CSwC/OsvaeTg2BtvH3/U8jnTOk59cwvywP8z+wOWe6bLcY14v9Zc2NxdsA40x7oNb\\nLtZgY8z+lDfG9mn5n/P2Py7xHsR+0U0zxsx2T8QYs8ft/V8ZbO9N52/L7GZQRMKwvx6XGGPec9tO\\nPDAIe4N6yGXRY87fAcaYBJf4B7FfhHltlHFpijX2LvSx8/Y/nlfxSm9sYaGHMeas23ainGWdXOJ3\\nwR6z0caYfS7xE0lfa5ApY8xx7Jf7JmzNzmRsjeBJEVnkNOd4bO7OJM141/PSJfwoMAX7xXq9F0l2\\nw9YoDDDG/OGW5jpsLVcjEQl3Wy9d7Z4x5owx5kKm6/gU+zk8Aal9NR8D1hhjNnhaQUSKY2thjmFr\\n513z8Su2diWYtJ+tV+e+05zYE/gLGGRcapud8yGlSbaT+7oZuJhjthRIIm2NYXMnzVed97c5+Q7C\\n1sj/Yow5ls28ZWUztpYslbE1T0e5sOu0HxCdwcv9+/isc726bts453xOiTbGpNbgOf9/i20RGmOM\\n+dNlWTy2cBcCXOOWrz9xY2zt+NvO22zf3zOR0qTczxiTek4ZY05i72lgB4O5O449913P47XYWtob\\nRcS1RdVgazvTteSYPOxLmp9oc3PB9lPWUby21kNYSpNQKZewes7fb7KTqNP01AfbVFAV+ytPXKJU\\n9iKP9Zx1A0QkxsPylP6TNVzCbgTijTFrPMRf4sW2c0p2j7PXxE4rURXYC/R36RLkKp60x+cm5+9S\\n94jGmF9F5Ci29idbjDFrRKQ29ou0Gfb4N3D+bwZ0F5EWxph/MkkmDRG5EdtXtSG2UOg++rEytgk3\\nO+o7f+s6TbzuIpy/NYBd2Bqqw8BQEWmAPe9XABtdv3y8YYw5KSKfAV1EpBJQF9u0FZPJarWx9+01\\nGRSyFmFnSLjRJczbc/967DV0GhicwfmTSNrzx5OLPmbGmBMisg6oJyLFjDH/YguFy520TmILjZ9i\\nP9Ng7DHIKevdC2qOPYCn8yYrZbMqbBhj9ovIYuB2Z9+/wHb5+MkYc+YCtpkZT/ehlB+J6zws2+v8\\nDXNdLiLlsd07WmGvnRC39by5v2fkRmwNf5yHZYtc4rj7zbVQ6WI39r53GXDcGJMsItOxP6p+FZGZ\\n2OMe58196lKjhcSCKz6XTlxPNZOJzt8iLmElnb97yYKIFMXe1GsDG7A39KPYPk4p/V68me6gjPO3\\nofPKSHGX7QeR8RQYB7zYNthmCsh84FfKsoy+DLN7nC9EyvGpjK2hyIhrIeNy5+/BDOIe4HzBKVuc\\nL9fVzgtI7cf6P2zh8UXgpeykJSLNsDUcKU3YX2H7WCY7ad3JhZ1Dz2QRrzjYWgQRuQVbgGuD7asJ\\ncFBE3gZeN5n3I83IeOyX0mPYQs4pbHNuRlI+p3S1qm7hJeGCz/2UY3Od88pI8UyW5eQxW4j9jG8V\\nkf/D9sOeZIxJEpGlnK9lzE5/RG9l1FKTyMVfp5lph20R6cD5GtN4pxDTLwdrSk94CEvMxrLUlgCn\\nj+w67P0mDpiEPW6J2Obrp7jI6Wxcz2NPhXZjzD8i8i/nv5dcZfYZQtrP8UlsE/yjnL83JYjI18Dz\\nphCOutZCYsHl6ddtipSCiafP19NFdCFSLrzs/EJ8CFtAfM8Y86zrAhG5BltI9EbKzWuoMWZwpjGx\\nTVsichZ7w/KkwgVuv0wmcVImic3p7gDZkZK/ZcaYxl6uUx7PA6C8PUYeGWOWi0hfbCHvNi9WjcZ+\\nMd3iXiMmIsOwhURvpOzv1Zl0hUjD2KlqHnU60NfCFkqeBYZhm6de9zIPGGPinFGdz2DPz4lZNMOm\\n5Dujz6Oia7wLPPdTtvGJMaZLJnnJUg4ds0XYe0QLzu/HQpdlbUWkqpN2At4PtMp3nHNgEDBIRK4E\\nmmC7SDyOrW329nzPTU9jvwf6GWPecF0gdhT4Ux7X8oJzHp/D3p/SEZHLsLXfWVZaZLGdBGy/0ZEi\\nUgE7qKczth9qdRG54QJ/DBZY2ifx0pQycaqnKSZyaiTvKudvdm5WVZ2/n3tY1iSDdVIuRE+/1lO2\\n7XG6jwz8DISISF0Py5p6kQ7YTtLJQG2nj5gnKc2ZHvuW5YAMj48x5gC2oHdjJvlzl9JMm+7zEJFa\\nZF4g9lZKDbhrO2ZmnzfYc2h3Bk2mGRWEkzJJ70LOIQCMMcnGmI3GmDexNWRgB5lcqPHYwl0R5//M\\n/B+2BqSueJ6Wqpnz17XZ3dtzfwO2qbmhU7i7aBd5zFZgR/c2x/6wOM75/UspLN6Dba7/KZt9HbM6\\n3/INY8xOY8wU7P7vBe5wRp9D/tiPnL6/Z+RnINipnXbn6by/KMaYA8aYmcaYu7Fdu67j/L4WGlpI\\nvDSl9FXs5nqTFzv3m7e1dhmZiW2q6igi7dwXOoNLUuxw/jZ1i1MNGJpB+imds90HDmDsJONfAk1F\\npK+nLzKxc5u5FpInOX9HuA6acPrSDMggDx4ZY0442w/GTkHhvu2rsANH4Pygn5yW4fFxjME2B453\\nfmWnISKhInKDS9AUbMH3ead/XEo8f9JOZZQlEblV7ByQ6fowOoMLUgbC/OiyKKv92QFUEpFr3dLr\\njZ3Wx5OjQMUMBsl8hB2l+ZrbcUhJ119Emrq8v148P0IspWYjo6doZMck7KTZbTMoBKdyCkAzsYX2\\nl93yXBPbXHaatNOheHXuO/23PgCuwk6H4mlevCuc6zdDOXXMnPzEYUd8t8YOWEtpLfkVO3VKP2zL\\nSbb6Izppnibj881nRKSi2Anp3aXUlqUOrMgn+7HD+dvUNVBE6mOnzPEkq+vdk4nO35HOfSRlO5dx\\nvkl+ghfppSF2XsV0g5GcbaV08/A4LdWlTJubL02LsR2SWwKrRORHbE3F3dj5DzN8Zmx2GWPixT57\\ndh4wW0R+cLZZDPuLK5LzF9Ys7EjMl8VOaPsrtn9bW+z8bR08bCLlZv+mc+GeAM4ZY0Y64U9gO46P\\nxg6CWImdZqKSs/2bnPRTBoNMwI7IbgFsFPus02DssYjD+47Vz2LnanvWKUwsxPYnuwp7nEOwI8U9\\ndQzPCRuw+/uYMyp2L7YLwgRnFPA72GPwKNBcRBZgB2CEYufXa4QdebgBwBizWUSGYOcw2ygiMzg/\\nT6I/dn4914J/Zq7Ejg4eJyLLsH18znG+mawsduRz6shaY8whp9m1pYj8D/gTW2idZYzZgh0FPwtY\\n7XQoP4UdwFQX27Hf0wTqC7Gf0zfO+XEOO+DjO2PMPhF5CDsf3Xrn+GzG1m5ege3r6s/5bgPtsIM4\\nVmDnUDvi7Ofd2C/sNM1s3nD6Fnsz/1of7L6/KCINsf19y2PP5aLYqY1c+xpeyLk/CNs83Ae4T0SW\\nYPs7VsDOHVgf6IU9LzKSk8dsIbYQEopLn0NjjHEGeXRwiedNmm1E5HPO19D+YIxZlflqF6W/iGRU\\nOP7eGJMy/+UyEfkZe6/ci+0m1Nb5+5qxs06k8MV+uJqAPRc+EpE7sdPkVMfeO2bh+f6+ENsMPUVE\\nvsL+YDtkjPkok+18jD0GbbADS77m/DyJV2C7aqSbacMLJbH3ly3YWstd2Pt4K+xo7k+NMbsuIv2C\\nyeSDeXj0df5F9udJzHTOOuwX8WTs6MIz2Oc+dyHrebPSzQVFJnPyYQtF47HNm+ec7a0E+nqINwP7\\nRXMaezPrjZ3jyuM8X9jpDP7Pyb9x32fsF2Jf7MCIk068ndj5057FbQ5J7Bfjq06cs9iCyGDsaOIM\\n5xrL5Bhfju0rtx7bhJqAHRn4JdAig3UuZA5Lj583tqC31Nl34yld7A30W+wX9Dnn+K/CFgarekiz\\nK7bgeAY7iGUith9YluecSxolsf14pjifX8ogpaPY/mLPAyEe1quJHQF7HFtANMADLsvvx062fcqJ\\nMx87ye2z7nFdPp+Pnc8kMYNjew221uxPZ5//xhYWJ+Eydyd2xO9bzmd9xIm7HTvIxONcnplcu2nm\\n9sskrsd5Ep1lodja4r+cz/W4c+yaZpCW1+c+9gv4cewI6OPOdvY459yLpJ1P1dM8iTlyzJy06ruc\\n4zXclqXMnxcPBGb3msMWjmdi71lJuNzjPO1Pdq7JTPJ/xCX/Gb1Sth2KvT6XOufuWefvQvdz/EL3\\ng8zv95ndozK61uo4598R7PX5E/BIZscR+0Nkq7N/Bpc5TTM6vtgfbs9hC3Hx2MLlT9jvCvc5JbOa\\nQzLNMcBeIwOx3x+7nfP1ELa7Qzfc5mEtLC9xDo5SSimllFKptE+iUkoppZRKRwuJSimllFIqHS0k\\nKqWUUkqpdLSQqJRSSiml0tFColJKKaWUSqfQz5MYGhpqIiIifJ0NpZRSSqksrVu37ogxpmxebKvQ\\nFxIjIiJYuza35jtWSimllMo5IrIzr7aVp83NItJSRBaJyAEROSsie0RkhvM4qZQ4ESJiMniVdEuv\\nqIiMEpH9InJaROJEJKPnuCqllFJKqWzK65rE0sA64H3s7PDh2GeHrhKR2sYY19LxcOwj21z94/Z+\\nAvbRP/2wTx54BvhOROobY37JhfwrpZRSShUKeVpINMZMwz6SKZWI/IR9tusD2OfwpvjLZPLsSRG5\\nAXgYeNwYM8kJW4p9Juwr2OeGKqWUUkqpC5AfRjcfdf4merleO+zzYD9LCTDGJALTgZYiEpQz2VNK\\nKaWUKnx8UkgUkSIiEigi1wAfAgdwq2EEhotIooicEJGvRaS22/LrgO3GmHi38E1AIFA1VzKvlFJK\\nKVUI+Gp082rgZuf/P4DbjDGHnPdnsQXH77H9FqsDg4CVIlLXGLPFiVcaOO4h7WMuyz0SkR5AD4Dw\\n8PCL2A2llFJKqUuTrwqJjwAlgKuAF4AFItLIGLPDGLMf6OkSd5mIfIutIYxy1r0oxpiPgI8AIiMj\\nTVbxT548yaFDh0hISLjYTSt1SQoICKBcuXKUKFHC11lRSimVQ3xSSDTGbHb+XS0i3wA7sKOce2YQ\\nf7eILAf+4xJ8HLjSQ/SUGsRjHpZ57eTJkxw8eJDKlSsTHByMiOREskpdMowxnD59mr179wJoQVEp\\npS4RPh+4Yoz5G9vk7G0fwk1AFREJcQuvCZxz0rxohw4donLlyoSEhGgBUSkPRISQkBAqV67MoUOH\\nsl5BKaVUgeDzQqKIlMf2O/wzkzjhQCNsX8YUc4AA4EGXeP5AB+B7Y8zZnMhfQkICwcHBOZGUUpe0\\n4OBg7ZKhlMq2kSNh8eK0YYsX23CVP+Rpc7OIfAmsBzYCJ4FrgT7Y6W9GO3FGA8nAKmyTcTVgoBM2\\nLCUtY8zPIvIZMFZEAoDtwFNAFaBTDuc7J5NT6pKk14lSyht160L79jBjBjRrZguIKe9V/pDXfRJX\\nAe2B57HT1OwGlgDDjTE7nDibsIW97kBx7DyKi4Ahxpjf3dJ7DFtwfBUoCWwAWhlj1ufqXiillFLq\\nojRrZguE998P994LX399vsCo8oe8fuLK68DrWcSZCEzMZnqngb7OSymllFIFSLNmUL48TJwIAwZo\\nATG/8XmfRJV/NG3alKZNm3q1zpIlS4iJiSE5OTl3MqWUUuqS9b//wZYt0KgRfPxx+j6Kyre0kKgu\\nypIlSxgyZIgWEpVSSnll8WLo2RMCAuDzz21Tc/v2WlDMT7SQmMdiY2OJiIjAz8+PiIgIYmNjfZ0l\\npZRSKs/98AMkJECPHlCu3Pk+imvW+DpnKoUWEvNQbGwsPXr0YOfOnRhj2LlzJz169PBJQXH69OlU\\nr16doKAgrrvuOr788ss0y8+cOUOfPn2oVasWxYsXp0KFCrRt25YtW7akxomJiWHIkCGAfeKGiKQZ\\n4RodHc1NN91EiRIlCA0N5bbbbmPVqlV5s4NKKaXytbPORHXPP38+rFkz6N/fN/lR6fnqsXyFUlRU\\nFPHx8WnC4uPjiYqKolOnHJ21J1M//PADDz/8MK1bt2b06NEcPnyY3r17k5CQQLVq1QA4e/YsJ0+e\\nZODAgVSuXJnjx4/z/vvvU79+fTZv3kyFChXo3r07e/bsYcKECSxfvpwiRYqk2c6ePXvo1asXV155\\nJf/++y9Tp06lcePGrFu3jtq1a+fZ/iqllMpfjh2DDz+Ehx6CKlV8nRuVES0k5qFdu3Z5FZ5boqOj\\nqV69OrNnz8bPz1YmV69enfr166cWEi+//HImTJiQuk5SUhItW7akfPnyTJs2jT59+hAWFkZYWBgA\\nt9xyC/7+aU8n9/VbtWrFddddx8cff8xbb72V27uplFIqn3r/fTh1Cl580dc5UZnR5uY8FB4e7lV4\\nbkhKSmLNmjU88MADqQVEgHr16hEREZEm7owZM7jlllsoWbIk/v7+FCtWjFOnTvH77+7TVXr2ww8/\\n0KxZM8qUKYO/vz8BAQFs3bo12+srpZS69MTHw1tvQevWoI1K+ZsWEvPQsGHDCAlJ+6jpkJAQhg0b\\nlsEaOe/IkSMkJCRQvnz5dMtcw+bMmUOHDh2oUaMGn376KatXr2bNmjWULVuWM2fOZLmd9evXc9dd\\nd1G8eHEmTJjAqlWrWLNmDTfccEO21ldKKXVpmjgRjhyx8yKq/E2bm/NQSr/DqKgodu3aRXh4OMOG\\nDcvT/oihoaEEBARw8ODBdMsOHjzIlVdeCdiBLVWrVmXy5MmpyxMSEjh27Fi2tvP555/j7+/PF198\\nQUBAQGr48ePHKVmy5MXthFJKqQIpIQHeeAMaNrRzI6r8TWsS81inTp3YsWMHycnJ7NixI08LiABF\\nihShbt26zJo1K83chqtXr2bHjh2p7+Pj49P1Mfzkk09ISkpKExYUFATA6dOn04THx8dTpEiRNKOd\\nFy1alOf9L5VSSuUfn30GO3dqLWJBoYXEQmjIkCFs2bKFe+65h3nz5jF58mTat29PhQoVUuO0atWK\\nLVu20KdPHxYuXMjrr7/O4MGD09UC1qxZE4DRo0ezevVq1q5dm7r+qVOn6Nq1KwsXLmTcuHF07tyZ\\nypUr592OKqWUyjeSk2HECKhVC+66y9e5UdmhhcRCqEWLFsTGxvL7779z3333MWrUKMaOHZs6shng\\niSeeICoqis8++4y2bdsyf/585syZw+WXX54mrTZt2vD000+nTo9Tt25dAFq2bMnbb7/NihUraNOm\\nDRMnTmTKlClUrVo1T/dVKaVU/jB/PmzaZEc0+2npo0AQY4yv8+BTkZGRJqX2y5PNmzdTo0aNPMyR\\nUgWXXi9KqYw0agR79sC2bfZRfOrCiMg6Y0xkXmxLB64opZRSKlctXw4rVsA772gBsSDRCl+llFJK\\n5aoRIyA0FB5/3Nc5Ud7QQqJSSimlcs3GjTBvHvTuDW5TBat8TguJSimllMo1I0dC8eLwzDO+zony\\nlhYSlVJKKZUrtm+H6dPhySehVClf50Z5SwuJSimllMoVo0fb6W769PF1TtSF0EKiUkoppXLcoUMw\\nYQJ06QL6HIWCSQuJSimllMpxb78NZ89Cv36+zom6UFpIVEoppVSOOnkS3nsP7rsPXB7mpQoYLSQq\\npZRSKkd99BH8/bd9BJ8quLSQqBQwduxYvvjii3ThMTExiIjX6e3YsQMRYfLkyTmQO6WUKjjOnoUx\\nY6B5c6hb19e5URdDC4lKkXEhsXv37sTFxfkgR0opVTB98gns3w8DBvg6J+piaSFRqUyEhYVRr149\\nX2dDKaUKhKQkO3n2zTfbmsSsxMbGEhERgZ+fHxEREcTGxuZ+JlW2aSGxkNqwYQPt2rWjVKlSBAcH\\n07BhQ5YtWwbAgQMHKFeuHPfee2+adcaPH4+IMHfuXOB8k+r7779P3759KVeuHCEhIbRp04YdO3ak\\nWTchIYGXXnqJiIgIAgMDiYiI4KWXXiIhISE1Tkp6H374IYMHD6ZixYqULFmStm3bsmfPnnT78NFH\\nH3HDDTdQtGhRQkND6datG8eOHUsTR0R46aWXePvtt6lSpQqXXXYZTZo0YdOmTalxIiIi2LlzJ7Gx\\nsYgIIkLXrl0Bz83N7777LvXr16d06dKULFmSevXqMW/ePO8+AKWUugR9+SVs22ZrEbPqqRMbG0uP\\nHj3YuXMnxhh27txJjx49tKCYj/j7OgMF0XPPwS+/+DYPderA2LEXtu769eu59dZbufHGGxk/fjwh\\nISF88MEHtGjRgpUrV3LzzTczadIk2rRpwwcffEDPnj3ZvHkzzz33HP/9739p06ZNmvSGDx9OnTp1\\nmDRpEoeL/F/TAAAgAElEQVQOHWLQoEHccccdbNq0iYCAAAAeffRRZsyYwaBBg2jUqBErV65k2LBh\\n/PXXX3z66afp0mvQoAETJ07k0KFDPP/883Tu3JklS5akxhkwYACjR4+mV69ejBo1ir179/LSSy/x\\n66+/snLlSooUKZIad+rUqVSrVo233nqLc+fO0a9fP+6++262bNmCv78/X375JXfddRc33HADMTEx\\nAJQtWzbD47d9+3a6du3K1VdfTVJSEnPmzKFNmzZ88803tGrV6sI+FKWUKuCMgREj4JprwK2OwaOo\\nqCji4+PThMXHxxMVFUWnTp1yKZfKG1pILIT69etHeHg4ixYtIjAwEICWLVtSq1Ythg4dyldffUXr\\n1q3p1asXffv25T//+Q+PPfYYVatWZdSoUenSu+yyy5g9ezZ+frZi+tprr6VRo0ZMmTKFbt268euv\\nvzJt2jSio6NTC2F33HEH/v7+vPzyywwYMIDrr78+Nb2IiIg0BcfDhw/Tr18/9u3bR6VKldixYwej\\nRo0iOjqawYMHp8ZL2e6cOXO45557UsMDAgKYO3duaoEV4MEHH+Snn36iQYMG3HjjjQQFBREaGpqt\\npuXRo0en/p+cnEzz5s3ZunUr48aN00KiUqrQWrgQ1q2zI5tdfqdnaNeuXV6Fq7ynhcQLcKE1ePnB\\n6dOnWbp0KYMGDcLPz4/ExMTUZS1atEhTzT9y5EiWLl1KgwYN8PPzY+3atQQFBaVL84EHHkgtIAI0\\nbNiQsLAw4uLi6NatGz/++CMAnTt3TrNe586defnll1m6dGmaQuJdd92VJl7t2rUBe+OoVKkSCxYs\\nIDk5mU6dOqXJ/y233MJll13Gjz/+mKaQePvtt6cpILqm16BBg2wctbTWrVtHdHQ0a9as4fDhwxhj\\nAKimk4EppQqxESOgYkX7hJXsGHb55Xz/998scQlrCtxx+eU5nzl1QfK0T6KItBSRRSJyQETOisge\\nEZkhIjXd4pUSkY9F5IiI/CsiP4hIbQ/pFRWRUSKyX0ROi0iciDTOuz0qeI4dO0ZSUhJDhw4lICAg\\nzevdd9/l+PHjJCcnAxAUFESHDh04e/Ysd9xxBzVr1vSYZvny5T2G7d27N3WbABUrVkwTp0KFCmmW\\npyhdunSa9ykF0zNnzgBw6NAhAKpWrZpuH/755x+OHj3qVXre2L17N82bN+fYsWO88847rFy5kjVr\\n1tCqVasLSk8ppS4Fa9bYmsQ+fcBDXYJHdZ9+mhlAK6AytoA4wwlX+UNe1ySWBtYB7wOHgXBgALBK\\nRGobY3aKHSUwB4gA/gscBwYCi0WkjjHGdQTDBKA10A/4C3gG+E5E6htjfNxrMH8qWbIkfn5+PPPM\\nM3TJ4OdeSq3gpk2bGDp0KJGRkcyePZvZs2dz9913p4t/8OBBj2F16tQBzhfSDhw4wNVXX50a58CB\\nA2mWZ1eZMmUA+P777ylVqlSGy3PDt99+y4kTJ5gxYwZhYWGp4e79apRSqjB5/XW4/HJ48snsr9Ni\\n2DB+MIavhg8nATjn58f6AQNoMWxYruVTeSdPC4nGmGnANNcwEfkJ2AI8AIwG2gENgduMMYudOHHA\\ndqA/0MsJuwF4GHjcGDPJCVsKbAJecdJRbooVK8att97Khg0buOmmm9I0E7s6c+YMHTt2pHr16qxY\\nsYKOHTvSrVs36tatS6VKldLEnTVrFjExMalprVixgj179lC/fn0AGje2lbvTp08nKioqdb2Upu2m\\nTZt6tQ+33347fn5+7Nq1i9tvv92rdTMSFBTE6dOns4yXUhh0bb7eunUrK1asSFNoVEqpwuL33+GL\\nL2DgQChRwrt1WzgtTEEAUVG0eOWVHM+funD5oU9iSttgSueydsC+lAIigDHmhIjMAe7GKSQ68RKA\\nz1ziJYrIdGCAiAQZY87meu4LoDFjxtC4cWNatmxJt27dqFixIkeOHGH9+vUkJSUxYsQI+vXrx59/\\n/sn69esJDAxk/Pjx3HDDDXTp0oUFCxakmRbmn3/+4Z577uHJJ5/k8OHDDBw4kGuuuSa1prJWrVp0\\n7NiRmJgYEhMTadCgAXFxcQwdOpSOHTum9hHMrquvvpoXX3yRZ599lt9//50mTZpQtGhRdu/ezYIF\\nC+jevTvNmjXzKs2aNWuybNky5s6dS4UKFQgNDSUiIiJdvBYtWuDv70+XLl14/vnn2b9/P9HR0YSH\\nh6c20yulVGEyapRtYu7VK+u4aaxYYacLCQyE/v1h3Dho1sy+VP5gjMnzF1AECASuAT4H9gPlnGWr\\ngO88rNMfMEBx5/104HcP8do78a7LTl5uvvlmk5nffvst0+UF1W+//WY6dOhgypYtawIDA03lypVN\\n27Ztzbx588ycOXMMYMaPH59mnSVLlhg/Pz8zYsQIY4wx27dvN4B57733TJ8+fUxoaKgJDg42d911\\nl/nrr7/SrHv27FkTFRVlwsPDjb+/vwkPDzdRUVHm3LlzqXFS0nPf7uLFiw1gFi9enCZ8ypQp5pZb\\nbjEhISGmWLFipnr16uaZZ54xu3fvTo0DmKioqDTrpWxn0qRJqWGbN282jRo1MsHBwQYwjz76qDHG\\nmOjoaGMvk/M+++wzU61aNRMUFGRq1qxppk2bZh599FFz5ZVXZrqNwuBSvV6UUp7t2WNMQIAxTz/t\\n5Yr79xtTurQxfn7GfP21DVu0yJjQUPtXZQhYa/KovCbGGZmZl0RkLXCz8/YPoJ0xZrOzbCuw3hjz\\nkNs63YHxQLgxZreIfA+UMMbUc4vXAlgANDbGLMsqL5GRkWbt2rUZLt+8eTM1atTI/s4VIjt27KBK\\nlSqMHz+e7t27+zo7Kh/Q60WpwuWFF+yMH9u2QZUq2VwpIcE+jiUuDj74ALp1O79s8WI7CqZ//1zJ\\n76VARNYZYyLzYlu+euLKI0A9bJ/Ck8ACEYnIq42LSA8RWSsiaw8fPpxXm1VKKaUuGceOwYcfQocO\\nXhQQAV58EZYtY+SbD7D4tqvSLFocASMb5mg21UXwSSHRGLPZGLPa2IEszYHi2FHOYEczpx+yakdG\\npyzPTrxjHpalbP8jY0ykMSYysydrKKWUUsqz99+HU6dsmS/bPvsM3nwTevWibusetJ/Vnq+2fMXK\\n3StZvH0x7We1p26lurmWZ+Udnw9cMcb8LSJ/AFWdoE3AHR6i1gR2GWNOucS7V0RCjDHxbvHOYZux\\nVS6KiIjAF90VlFJK+VZ8PLz9Ntx1F7g8CyFzmzbZpuWGDWHUKJoFBjKx3UTum3Ef/uJPscBizHxw\\nJs2q6MCV/MJXzc2pRKQ8UB340wn6GqgsIk1c4pQA2jrLUswBAoAHXeL5Ax2A742ObFZKKaVyxdtv\\nw+HDMGhQNlc4cQLuuw+KF4cZMyAwkH/O/sPw5cNJTk7mTNIZnq77tBYQ85k8rUkUkS+B9cBGbF/E\\na4E+2OlvUh6I+zUQB0wVkX6cn0xbgJEpaRljfhaRz4CxIhKAnUfxKaAKoE8GV0oppXLB0aP2EXxt\\n29pKwSwZA127wp9/wqJFUKkS8QnxtJnWhtV7VlM8qDi9b+nNuLXjaBbRTAuK+UheNzevwk5R8zx2\\nCpzdwBJguDFmB4AxJllE2gBvYJ/MUhRbaGxmjNntlt5jwDDgVaAksAFoZYxZn+t7opRSShVCr70G\\n//xj/2bLyJHw1Ve2L2LjxpxJPMPd0+9m2c5lFA8szlcdvqJZlWY0i2hG+1ntmfHADC0o5hM+mQIn\\nP9EpcJTKOXq9KHVp27kTrr0WOnWCiROzscLChXDHHfDggzBtGueSE7jvs/uYt20e7Wu2p2dkzzQF\\nwsXbF7Nm3xr6N9QpcDKSl1Pg+HzgilJKKaUKhpdfBj8/GDIkG5F37YKHHoIaNeDjj0k0SXT8vCPz\\nts3jg9Yf8GRk+gc9N6uizc35ic8HriillFIq/9uwAaZOtY/fu+KKLCKfPQsPPGD/fvEFSSHBdPmy\\nC19s/oKxLcd6LCCq/EdrEpVSSimVpYEDoWRJGDAg67j07m2fnPLFFyRfU5XuX3dj2q/TGNF8BL3r\\n9c71vKqcoTWJhUxMTAwikmvpiwgxMTHZjv/LL78QExPDsWPp5z73Ni2llFK5Y/Fi+OYbO+VNKU+P\\nsXA1aZJ9FMuAAZh77uGZec8w+ZfJxDSJ4cVG3sy8rXxNaxJVjoqLiyMsLCzb8X/55ReGDBlC586d\\nKV26dJpl3qallFIq5xljH6V8xRXw7LNZRF6/Hp56Cpo3x7zyCn2/68sH6z7gxYYvMrjJ4DzJr8o5\\nWkhUOapevXr5Mi2llFIXZtYsWLvWVhAWLZpJxKNH4f77oVw5zKefMmjpYMauHkvvW3ozvPnwXG3F\\nUrlDm5sLuZMnT/Lss89SqVIlgoKCqFatGm+++Wa6x+2tX7+eW2+9leDgYK644gpee+01oqOj0130\\n7k3EW7du5d5776VcuXIULVqU8PBwHnzwQRITE5k8eTKPPfYYANdccw0igoiwY8cOj2kBbNiwgXvv\\nvZcyZcoQHBxMtWrVGD58eI4fF6WUUpCQYJuYa9WCRx45Hx4bG0tERAR+fn5ERETw6Sef2Hlx9u2D\\nWbMYuvkDRqwYwZM3P8mbLd/UAmIBpTWJF+C5b5/jlwO/+DQPdSrUYWyrsReVRnJyMq1bt2b9+vW8\\n8sor1K5dm3nz5tG3b18OHz7Ma85MqUeOHKF58+ZUqlSJ//3vfwQGBvLmm2+mFuYy07p1a0qVKsW4\\nceMIDQ1l7969zJ8/P3XbL730Eq+++iozZ85MbVquWLGix7R++uknmjZtStWqVXnzzTcJCwtj27Zt\\nbNy48aKOg1JKKc/Gj4c//oC5c6FIERsWGxtLjx49iI+PB2Dnzp3sfPxxSEyEDz9kZMISopdE07VO\\nV95v/b4WEAswLSQWYvPnz2f58uVMmjSJrl27AnDHHXfw77//Mnr0aPr27UtoaChjxowhPj6e7777\\nLrUg17JlSyIiIjJN/8iRI/zxxx/Mnj2bdu3apYY//PDDAJQtW5arr74agDp16lC1atVM03vhhRco\\nU6YMq1atIiQkBIDbbrvtQnZdKaVUFk6dsvMhNm4Md911PjwqKiq1gAjQGhiYmMhnxYpx8PrTvPjd\\nizxU6yE+bvsxfqINlgWZFhIvwMXW4OUXP/74I35+fqmFthSdO3dmwoQJxMXF0bZtW1atWkW9evXS\\nDCIJDg6mdevWTJo0KcP0y5Qpw1VXXcWAAQM4ePAgTZs25ZprrrmgvMbHx7NixQr69euXWkBUSimV\\ne8aMgUOHYPZscK0M3LVrV+r/VwNTgXVA12v/5cx3z3Fv9XuZcs8UivgVyessqxymRfxC7NixY5Qu\\nXZrAwMA04RUqVEhdDrB//37KlSuXbv3y5ctnmr6IsGDBAiIjIxk4cCDXXnstV111FePGjfM6r8eP\\nHyc5OVlHOyulVB44dAhGjbLjUNzHEIaHhwMQDHwOJAH314Az7aD1Na2Z/sB0AooE5HWWVS7QQmIh\\nVrp0aY4dO8a5c+fShB84cCB1Odg+gocOHUq3/sGDB7PcxlVXXcWUKVM4fPgwP//8M7fddhtPP/00\\n33zzjVd5LVWqFH5+fuzdu9er9ZRSSnlv6FA4fRqGDUu/bNiwYYQEB/MhUBt4+ErY+SDUCqnFrPaz\\nCCwSmH4lVSBpIbEQa9KkCcnJycycOTNNeGxsLIGBgdSvXx+wU9HExcWxZ8+e1DinT59m3rx52d6W\\niFCnTh3GjBkDwK+//gpAUFBQanqZCQkJoVGjRkydOjXLuEoppS7cn3/CBx9A9+5QrVr65Z06dWLp\\n/ffzCBAdCt8/CtVDqrPquVUU9c9sjhxV0GifxELszjvvpFGjRvTs2ZPDhw9z3XXXMX/+fD7++GMG\\nDhxIaGgoAH379mXcuHG0bNmS6OhogoKCGDNmDEFBQZmOWtu4cSO9e/emQ4cOVK1alaSkJCZPnoy/\\nv3/qgJOaNWsC8N577/Hoo48SEBDA9ddfn64JHOCNN96gSZMm1K9fn+eff56wsDD++usvfvnlF955\\n551cOEJKKVX4REVBYCBER2cQYeFCIqdN40CL+oxstIZ6YZF83/l7igUWy9N8qtynhcRCzM/Pj3nz\\n5jFo0CBef/11jh49SkREBGPGjOG5555LjRcaGsrChQvp1asXXbp0oUyZMvTs2ZMjR44wZcqUDNOv\\nUKEC4eHhjBkzhj179lC0aFFq167N3LlzufnmmwG44YYbiImJ4aOPPmL8+PEkJyezfft2jyOn69at\\ny4oVKxg8eDD//e9/OXv2LFdeeWXqXItKKaUuztq18Nln8NJL4HE2su3boX17/r0qjFr11lGr4vV8\\n0+kbLgu6LM/zqnKfuE+aXNhERkaatWvXZrh88+bN1KhRIw9zVDAkJSVx0003pRYglQK9XpQqyIyB\\nFi1gwwb46y8oUcItwr//QoMGJO7cTmT3ZM5VCWfZY8soE1LGJ/ktrERknTEmMi+2pTWJKltefvll\\nqlatypVXXsnRo0f5+OOP2bhxI/Pnz/d11pRSSuWA77+HRYtg7FgPBURj4LHHML/+SqfHLuN4WClW\\nPPK9FhAvcVpIVNkiIrzyyivs27cPEeH666/nq6++4s477/R11pRSSl2k5GR48UWoUgV69vQQYcQI\\nmDmTEe1KsahaEZZ3/p6wEjol2aVOC4kqW1555RVeeeUVX2dDKaVULpg2zTYzx8aCM+nEefPmYaKi\\n+Cbycl675RxLOi2lWqiHYc/qkqOFRKWUUqoQO3vWDlS58UZ46CG3hb//jnn4YbZeEcLDd8Yzu+O3\\n3FzpZp/kU+U9LSQqpZRShdi4cbBjB3z0Efi5zp584gTm7nac4Awt709gwkMzua3Kbb7KpvIBnUxb\\nKaWUKqROnIBXX7Wjmm+/3WVBcjKmcyeS/thGu/vOEdXpQ+6veb/P8ql8QwuJSimlVCE1ciQcPWrH\\npbgyL7+MzJ1Hr5aGOx9/jSdufsI3GVQ+pYVEpZRSqhDatw/efBM6doSbXbsZzpqFvPYa42+Cov99\\njgGNBvgsj8q3tE+iUkopVQgNGQKJiba5OdXGjSQ80ok1YRD34sN83HJ0po9fVZc2rwuJIlIaCAaO\\nGGPO5nyWlFJKKZWbtmyBCRPg6afhqqucwKNHOdX6dk4EnOODgS2YcP9k/EQbHAuzLD99EakgIgNE\\nZImIxAOHgV1AvIjsEJEpInKn6E+NAicuLo6HHnqIsLAwAgMDKVGiBHXr1iU6Opr9+/f7Onu5JiYm\\nhkWLFvk6G0op5TODBkFwsJ36BoDERI62bUHA/kO80usGPnziawKKBPg0j8r3MiwkikiYiEwCdgIv\\nAP8AbwDPAU8CA4FvgFrAXOBPEemU6zlWOWL06NE0bNiQw4cP8+qrr/LDDz8wffp0WrZsyQcffMDj\\njz/u6yzmmiFDhmghUSlVaMXFwZdfQv/+UK6cDTvw1COUifuFVzuF8fpLSwgOCPZtJlW+kFlz8+/A\\n98A9wPfGmKSMIopIGNAJGCkilYwxo3I2myonLV68mH79+tG7d2/efPPNNMvuuusuBg4cyMyZM32U\\nu9xz9uxZgtI9SkAppQoPY2zhsHx56NPHhu17dwSVPp7O5MYlePrdnyhZtKRvM6nyjcyamxsaY+41\\nxnyTWQERwBizxxjzOnAV8HWO5lDluNdff53Q0FBef/11j8uLFStG165dU9/v37+fLl26EBoaSlBQ\\nENdffz1Tp05Ns87kyZMREVauXEn79u257LLLKF++PMOHDwfg22+/5cYbb6RYsWLUrVuXdevWpVm/\\nadOmNGrUiNmzZ1OrVi2CgoKoXr06M2bMSJe/DRs20K5dO0qVKkVwcDANGzZk2bJlaeJ07dqVsLAw\\n4uLiaNCgAcHBwfTv3z+1A/awYcMQEUSEmJiY1Px7esXExHh7iJVSKl+aOxeWL4foaCheHA4s+prS\\nfQay/OoAbp2xmoqXVfR1FlU+kmFNojHmF28Tcway/H5ROSoInnsOfvH68OSsOnVg7FivV0tMTGTp\\n0qXcd999BAYGZhn/33//pUmTJhw/fpzXXnuNK664gqlTp/LII48QHx9Pjx490sR/9NFH6dKlCz16\\n9GDmzJkMGjSIv//+m/nz5xMVFUXx4sXp378/99xzD3/++WeaPPzxxx/06tWLmJgYypUrx7hx43jo\\noYcoW7YszZo1A2D9+vXceuut3HjjjYwfP56QkBA++OADWrRowcqVK7nZZR6HEydO8NBDD/HCCy/w\\n2muvERwcTMeOHalfvz5du3blySefBCAsLIygoCDi4uLS7EtsbCzvvvsuNWrU8Po4K6VUfnP2LPTr\\nB9dcA927w9G/NsH993PwMqHk7O+5unx1X2dR5TPZGt0sIn6AnzEm0SWsJbY/4iJjzM/ZTOcBoDNw\\nMxCKHQDzBfCaMeYfJ04EsD2DJEoZY/52Sa8oMNRJsyTwC/CiMebH7OSnMDp69ChnzpwhPDw83bLE\\nxMQ07/39/Zk0aRLbtm1j8eLFNG3aFIA777yTgwcP8tJLL9GtWzeKFCmSus4jjzzCyy+/DNjawS+/\\n/JIxY8awdetWqlSpAkBycjJ33303cXFxNGnSJHXdgwcPEhcXR7169QBo1aoV1113HYMHD06tKezX\\nrx/h4eEsWrQotYDZsmVLatWqxdChQ/nqq69S0zt16hRTp07l7rvvTrevlStXTt1OirJly6b+v2LF\\nCsaPH0+fPn3o0KFDFkdVKaXyv5Ej4fffYf58OHP6CHvuqEfVfxPZN3siN13X1NfZU/lQdqfAmQac\\nBboAiEhP4H1nWYKItDbG/JCNdF4A9mIHvewB6gAxQDMRaWCMSXaJO5z0Tdf/uL2fALQG+gF/Ac8A\\n34lI/QupCc22C6jBy+8OHDhAxYppmxkSEhL48ccfqVy5cmoBMUXnzp157LHH+O2336hdu3Zq+J13\\n3pn6v7+/P1WrVuXEiROpBUSA6tXtr9Xdu3enSfOKK65IU3ArUqQIDz74ICNHjiQ5OZmzZ8+ydOlS\\nBg0ahJ+fX5pCbYsWLYiNjU2TXkBAAG3atPHySMCOHTu49957admyJW+88YbX6yulVH6zbRsMGwbt\\n28NtLc7wwx11aP3nKda+2Z/IOx/zdfZUPpXdQmI94EWX9/2Aj4HngY+AKCA7hcS2xpjDLu+XiMgx\\n4H9AU8B1yOlfxphVGSUkIjcADwOPG2MmOWFLgU3AK0C7bOSn0ClTpgxFixZl165dacJDQ0NZs2YN\\nAB999BHjx48H4NixY+kKjwAVKlRIXe6qVKlSad4HBgZ6DAM4c+ZMmvDy5cun20758uU5d+4chw8f\\nJjExkaSkJIYOHcrQoUM97l9ycjJ+zhPqy5Ytm6aWMztOnjxJmzZtCAsL49NPP01NSymlCipj4Kmn\\nICgIRo9JYsrTDXhiyV7+7/E2RD7nuW+6UpD9QmI5bA0gIlIVqAK8a4z5x5km59PsJOJWQEyxxvlb\\nOZt5SdEOSAA+c0k/UUSmAwNEJEgn+07P39+fxo0bs2DBAs6dO5daYPP39ycyMhKAuXPnpsYvXbo0\\nv/+evpvpgQMHUpfnlIMHD3oMCwwMpGzZspw+fRo/Pz+eeeYZunTp4jEN10Kdt1N3JiUl0aFDB/7+\\n+29Wr15NsWLFvNsBpZTKhz79FBYuhHfeMXw29X56TfyZv+rXoPZHX2W9sirUsltNchIo4/zfFPu0\\nlY3O+ySg6EXkIaVT2ma38OEikigiJ0TkaxGp7bb8OmC7MSbeLXwTEAhUvYg8XdL69+/PkSNHePHF\\nF7OM26RJE/bs2cOKFSvShH/66aeUK1eOmjVr5li+du/ezapV5yuPk5KSmDlzJv/5z3/w8/OjWLFi\\n3HrrrWzYsIGbbrqJyMjIdK/sCAwM5PTp0+nC+/bty7Jly5gzZw6VK3v7m0UppfKfY8fsVDf/+Q/8\\ndrg1XV6ZzV9F4Z49p4idPt3X2VP5XHZrEldia+cSsZNpz3dZVhXbv9BrIlIZ2zT8gzFmrRN8FvgQ\\nO0fjYaA6MAhYKSJ1jTFbnHilgeMekj3mslx50Lx5c0aMGMGAAQPYuHEjXbp0oUqVKpw5c4atW7cy\\nffp0ihUrhojQtWtX3nrrLe677z6GDRtGWFgYsbGxLFiwgA8//NDr5tzMlC9fng4dOjBkyBDKli3L\\nuHHj2Lp1K+PGjUuNM2bMGBo3bkzLli3p1q0bFStW5MiRI6xfv56kpCRGjBiR5XZq1qzJvHnzaNWq\\nFaVKlaJSpUr8+OOPvP322wwcOJCzZ8+mKayGhYURFhaWY/uplFJ5ZcAAW1C8vcdTPD3uG/wToG0C\\nbIvfnTo7RadO+hwMlQFjTJYv4BpgG5AM/AFEuCxbBEzKTjpuaRYH1gL7gLAs4l6Brc38xCXse2CV\\nh7gtAAPcmkl6PZxtrw0PDzeZ+e233zJdXpAtX77cPPjgg6ZSpUomICDAXHbZZSYyMtIMHjzY7Nu3\\nLzXevn37TOfOnU2ZMmVMYGCgqV27tvnkk0/SpDVp0iQDmG3btqUJb9KkiWnYsGGasO3btxvAjB8/\\nPl282bNnm+uuu84EBgaaa6+91kyfPj1dvn/77TfToUMHU7ZsWRMYGGgqV65s2rZta+bNm5ca59FH\\nHzWVK1fOcL9vuukmExQUZAATHR1toqOjjXPepHtFR0dn+5gWdpfy9aJUQbN8uTFgzP0vfG3mVcUk\\nCOY2SXt/u/LKK32dTeUlYK3xssx1oS+x28seESljjDnqFlYbOGA89zfMKJ1gbG3kDUATY8z/ZWOd\\n+cDVxphqzvvPgDop713itcf2U6xljNmUVbqRkZFm7dq1GS7fvHmzzpOXB5o2bUpiYiLLly/3dVbU\\nRdDrRan84dw5uOkmOBz4E9FFG/J0XCI9isB4t0djiAjJycmeE1H5koisM8Zkr3/VRfJq6KZ7AdEJ\\n+z8vC4gBwCwgErgrOwXEDGwCqohIiFt4TeActsZTKaWUKnTGjIFN+//g4Stu4+m4RD4uVTxdARHw\\nOANcDGAAACAASURBVGeuUimy2ycREbkKaA+Ek36gijHGdMtGGn5ALHAb0MZkMsWN23rhQCPAdSjW\\nHGAI8CB2Ch1ExB/ogH3WtI5sVkopVej89RcMeeMgre+4lVEz/uXfFk0I6dKNkJ49iY8/P9YzJCSE\\nYcOG+TCnKr/L7hNX7gFmYGseD2EHl7jKbpv1e9hC3TDgXxFxfeTFHmPMHhEZje37uAo7CKUadvLt\\nZGc9u0FjfnaanMc6tZPbgaew0/NoL9wCZsmSJb7OglJKFXjGwJP/PUWVFs2Z+tUBzl1zNcU+/5qH\\nS5TA+PkRFRXFrl27CA8PZ9iwYTpoRWUquzWJQ4ElQCdvmpY9SHkcR5TzcjUE+/SVTdjCXnfs4Jaj\\n2MExQ4wx7hP2PYYtOL6KfSzfBqCVMWb9ReRRKaWUKpCmzUhgfbF2rP5+E8EhlxP07Q9QogRgRzFr\\noVB5I7uFxKuA5y+ygIgxJiIbcSYCE7OZ3mmgr/NSSimlCq3jxw09v3icr39aTJVT/hRZMh8iInyd\\nLVWAZbeQuIXzk2krpZRSKp9p8VoUY7ZNpelOYOpkaNDA11lSBVx2Rzf3BwY5g1eUUkoplY/0m/k+\\nTTcOp/vPYAYNAm1WVjkguzWJMdiaxM0iso3zTzVJYYwxTdKtpZRSSqlcNevXL/n9i2f46ns4d/f9\\nBA4d6ussqUtEdguJSYD7oBGllFJK+dDyXcsZ/l4Hls7y4/jVdSjz6RTw82oKZKUylK1CojGmaS7n\\nQymllFJe+O3wbzz+QRt+mGo47V+e0KVzIMT9+RJKXTj9uaEUMHbsWL744ot04TExMYiI1+nt2LED\\nEWHy5Mk5kDullEpr78m93D3xDj75Xzxl/g0gcdZcpHIlX2dLXWKyXUgUkYoi8oaIrBGRP52/I0Wk\\nQm5mUKm8kFEhsXv37sTFxfkgR0op5dmJMye4K/ZOhsUe5JZ9CSx4JJaKrW/ydbbUJShbhUQRuRb4\\nBf6fvTuPs6n8Azj+ecbslgxmDMbM2KVIGSL7TnZhMELZKiH8IolBtlS0qKkIydimsoRoqmGs2YpC\\nZd/3LZox6/f3x52Z5prFHY25lu/79TqvO/c53/uc77k1fD3nPM9hIHAd2Jr0Ogj41RhT5o5leB+Z\\nMgUiIqzbIiIs7eru5OPjQ/Xq1W8dqJRSOSAmPoZ2i9rRPmwPnX6L533vSbSY2c7eaan7lK0jiW8B\\nfwNlRaS+iHQRkfpAWeBq0n51C1WrQqdO/xaKERGW91Wr5mweu3btonXr1nh4eODm5kbNmjVZv359\\nyv4zZ87g5eVFu3bWf/DMmDEDYwwrVqwA/r2k+vHHHzNkyBC8vLxwd3enZcuWHDlyxOqzcXFxvPHG\\nG/j7++Ps7Iy/vz9vvPEGcXFxKTHJ/X366aeMHj2aIkWKkD9/flq1asWJEyfSnMdnn33GY489hqur\\nK4UKFaJXr15cumQ98d4YwxtvvMEHH3xAiRIlyJs3L3Xr1mXPnj0pMf7+/hw9epTQ0FCMMRhj6Nmz\\nJ5D+5ebp06dTo0YNChQoQP78+alevTorV660/T/ATRYsWED58uVxdXWlYsWKLF++nHr16lGvXr2U\\nmDlz5mCMSfO9ppdffHw8kyZNonz58ri4uFC0aFGGDh3KjRs3rGJGjRpFqVKlUr6/WrVqsWHDhpSY\\n+fPn8/jjj5MnTx7y5ctHxYoV+fTTT2/7PJVS/02iJNJjaQ88V0QQHJHIF3TnyW+G4+Rk78zUfUtE\\nbrkBV4DOGezrAly2pZ+7catSpYpkZu/evZnuz6qffhIpVEhk1CjL608/ZWv3t7Rjxw5xd3eXmjVr\\nSlhYmKxcuVJatWolzs7Osn379pS4FStWCCAhISEiYvke3N3dZcCAASkxhw8fFkB8fHykZcuWsmLF\\nCpk1a5Z4e3tLmTJlJDY2NiW2S5cukitXLhk1apSsWbNGgoODxdHRUbp06ZKmPz8/P+nSpYusWrVK\\n5syZIwULFpS6detancfw4cPF0dFRhgwZImvWrJFZs2ZJ0aJFpVq1ahIfH58Sl9xfkyZNZNmyZRIW\\nFib+/v5SqlQpiYuLExGRnTt3ire3tzRt2lQ2b94smzdvlgMHDoiISHBwsFh+Tf41ZMgQ+eSTTyQ8\\nPFxWr14t/fv3F0C+++67NOcye/bsTP97fP/992KMkTZt2sjKlStlzpw5UqJECSlSpIjVOc+ePVsA\\nOXz4sNXn08svMDBQ3N3dZezYsRIeHi4ffPCBPPTQQ9K+ffuUmPHjx0vu3Lnlvffek7Vr18ry5ctl\\n9OjRsmzZMhERWb9+vRhjZNCgQRIeHi5r1qyR999/XyZPnpzp+WT374tS6l9DVg+Rar2RGCdHiaSW\\nvNznhr1TUnYAbJccqpFsLRKjgBYZ7GsJ/JNTCWf3ltNFooilQATLa05r0KCBlC9fXmJiYlLa4uPj\\npXz58tKmTRur2IEDB4qbm5vs2LFDKlWqJJUqVZIbN/79Qym5EHr44YclISEhpX3Dhg0CyMyZM0VE\\n5LfffhNAgoODrfp/8803BZBdu3ZZ9XdzQfj2228LICdPnkyJc3BwkLFjx1rFJR93yZIlKW2AlC5d\\n2qpgDQsLE0A2btyY0ubn5ydBQUFpvq/0irDUEhISJC4uTho3biytW7dO893cqkisUaOGPPLII5KY\\nmJjStn379jTfg61FYmRkpADyxRdfWMXNmzdPAPnll19ERKRFixbSrl27DPN6++23xcPDI9Pc06NF\\nolLZa968eeLn5yfUQIq/glzM6yzHnUtIBc9zcvmyvbNT9pCTRaKtl5t/BQYYY6zijeU610tJ+5UN\\nIiIgJARGjbK83nyP4p0UHR3NunXr6NixIw4ODsTHxxMfH4+I0KhRIyIjI63ip0yZQtmyZXnqqafY\\nv38/CxYswMXFJU2/HTp0wCHVulw1a9bEx8cnZcJHcr/dunWz+lzy+3Xr1lm1P/3001bvK1asCMCx\\nY8cACA8PJzExkaCgoJRziI+P58knnyRv3rxpzqNx48Y4pboec3N/WbVjxw5atmxJ4cKFcXR0xMnJ\\nifDwcP78M2tLiSYkJLB9+3aeeeYZq0vGVapUoUSJEreV2+rVq3F2dqZDhw5W302TJk2Af/9bVK1a\\nlVWrVjFy5Eg2bNhAbGysVT9Vq1bl8uXLdOvWjRUrVnDlypXbykcpdftCQ0Pp27cvR/MeJXc9WD4b\\ncl2DJrErGPWBJ/nz2ztDdb+ztUgcBzTC8sSVccaYF40xY4E9QGNg7J1K8H6SfA/i4sUwbpzlNfU9\\ninfapUuXSEhI4M0338TJyclqmz59OpcvXyYxMTEl3sXFhcDAQGJiYmjSpAkVKlRIt9/ChQun23by\\n5MmU4wIUKVLEKsbb29tqf7ICBQpYvU8uTJPvqTt37hwApUuXTnMe165d4+LFi1nqLyuOHz9Ow4YN\\nuXTpEh9++CGbNm1i27ZtNGvWLMv9Xbhwgbi4OLy8vNLsS+87tcW5c+eIjY0ld+7cVt9L8jGSv5vX\\nX3+dsWPHsnz5cmrXrk3BggV57rnnuHDhAgB169YlLCyM48eP065dOzw9PWnUqBG7d+++rbyUUlk3\\ncuRIoryicGgNofOg4lUIZAGHXc8TGGjv7NSDwNbFtFcbY1oC44GRgAEE2AG0FJHv71yK949t2yyF\\nYf36lvf161veb9v2b9udlD9/fhwcHOjfvz/du3dPNyb1iOCePXt48803CQgIYNmyZSxbtow2bdqk\\n+czZs2fTbatcuTLwb5F25swZSpUqlRJz5swZq/22KliwIADff/89Hh4eGe6/E1avXs3Vq1dZvHgx\\nPj4+Ke1RUVFZ7qtQoUI4OTmlFL2pnT17Fl9f35T3rq6uAGlG/G4uiAsWLIirq6vVRKTUiha1rKPm\\n5OTE8OHDGT58OGfOnGHFihUMGTKEqKgoFi1aBFhGiDt06MD169dZu3Ytw4cPp1mzZpw4ccLq/xOl\\n1J1x9MZReA7eXgltjsMAnmcNzeHGoxhz0N7pqQeArY/lQ0RWA6uNMe6AB5bJKln/m/EBNmxY2rb6\\n9XOmQATInTs3tWvXZteuXTzxxBOZ/kV/48YNunTpQvny5dm4cSNdunShV69eVK1aNaXQSPbVV18x\\nZsyYlP42btzIiRMnqFGjBgB16tQBYOHChYwcOTLlc6GhoQBWs3ht0bhxYxwcHDh27BiNGzfO0mcz\\n4uLiQnR09C3jkovB1Jev//rrLzZu3GhVNNoiV65cBAQE8PXXX1vNUt6xYweHDx+2KhL9/PwA+P33\\n3ylbtixgmaH8/ffW/z5r1qwZb731FlevXqVhw4Y25eHt7U3v3r1ZtWoVv//+e5r9efLkoWXLlhw6\\ndIhBgwZx8eJFPD09s3SuSqmsOX71OLm65+LlLQkM2QXv4890ZgIj8fNLsHd66gFhc5GYLKkw1OLw\\nHjV16lTq1KlD06ZN6dWrF0WKFOHChQvs3LmThIQEJk+eDMCrr77KwYMH2blzJ87OzsyYMYPHHnuM\\n7t27Ex4ebnUP3bVr12jbti39+vXj/PnzjBgxgjJlyqSMVj766KN06dKFMWPGEB8fz1NPPcXmzZt5\\n88036dKlS8o9grYqVaoUw4cP5+WXX+bPP/+kbt26uLq6cvz4ccLDw+nduzf1s1h5V6hQgfXr17Ni\\nxQq8vb0pVKgQ/v7+aeIaNWqEo6Mj3bt3Z+jQoZw+fZrg4GB8fX2tLtXbauzYsTRp0oR27drRt29f\\nLly4wJgxY/D29rYq4qtWrUqpUqV49dVXSUxMxMXFhY8//piYmBir/urVq0eXLl3o0KEDQ4YMoVq1\\najg4OHDkyBFWrVrFW2+9RdmyZWnTpg2PPfYYTzzxBB4eHvzyyy+sXr2afv36ATB69GjOnj1L/fr1\\nKVq0KCdOnOCDDz6gcuXKWiAqdYdduXGF5qHN6XgsF1PXJvANuRjCj8Be3Nw+ZsKEj+ydonpQZDSj\\nBRgNFE31c2bbqJyaaZPdmz1mN9vb3r17JTAwUDw9PcXZ2VmKFSsmrVq1kpUrV4qIyLfffiuAzJgx\\nw+pza9euFQcHh5RlUJJn8H700UcyePBgKVSokLi5ucnTTz8thw4dsvpsTEyMjBw5Unx9fcXR0VF8\\nfX1l5MiRVrOOk/u7+bgRERECSEREhFX73Llz5cknnxR3d3fJnTu3lC9fXvr37y/Hjx9PiQFk5MiR\\nVp9Lb+bxvn37pFatWuLm5iaA9OjRQ0TSn928aNEiKVeunLi4uEiFChVkwYIF0qNHD/Hz88v0GBkJ\\nDQ2VsmXLirOzs1SoUEG++eYbqVy5srRt29Yq7vfff5e6detK7ty5pXjx4vLuu++mm19CQoK89957\\nUqlSJXFxcZF8+fJJpUqV5NVXX5UrV66IiMg777wjTz75pBQoUEBcXV2lbNmyEhwcnPLfY8WKFdKk\\nSRPx9vYWZ2dn8fHxkeeffz5lhnlG7sffF6Vy0o24G1J3dl2p0yuXxDs7ybkyZaRQ7pkCIoULd5B5\\n8+bZO0VlZ+Tg7GZjOV5axphEoLqIbE36+Ra1puS67UrVjgICAmT79u0Z7t+3bx8PP/xwDmZ07zhy\\n5AglSpRgxowZ9O7d297p3DdOnDhB6dKlGTlyJKNGjbJ3Olmivy9K3b5ESaTr1135Zd0idn+ZBxev\\nInw3ahNPdy/E0KHwzjv2zlDdDYwxO0QkICeOleHlZhFxSO9npVT2iY6OZsiQITRq1IhChQpx6NAh\\npkyZgru7uxbeSj1ghoUPY+2WRfzxtQcuzo6cnfMdz7YuxOOPw4QJ9s5OPYiyfE+iUir75MqVizNn\\nzvDyyy9z8eLFlMlFYWFhaZYMUkrdv97b8h6frH2Xvcu8eOjqdRJ/WkPQyFJERcH8+ZDOErVK3XFa\\nJKrb5u/vT0a3KyjbODs7s2TJEnunoZSyo7A9Yby6ajBbVhem+KHzmGXLeCeyKj/+CJ99BuXL2ztD\\n9aDKsEhMug/R1gpAREQLTqWUUioLIo9G0u2bIL5eV5gqv5yFkBB2FGnJyPbQvj3oXSfKnjIr7MZh\\ne5GolFJKqSzYc24PbRa24a2tD9E68iyMGMH1bi/Q5Qnw8oIZMyDVamNK5bjMJq6MycE8lFJKqQfG\\nyb9P0jy0Od12Ca+suABBQTBhAq/0gQMH4McfIYsPo1Iq2+klYqWUUioHXb1xlafnP03l3y/wQVgc\\nNGgAs2bx1deGzz+HESNy7klcSmUms3sSR2ehHxGRN7MhH6WUUuq+FZsQS/vF7cn12x6+WeSCKV8e\\nvvmG42ed6dMHqlaFsWPtnaVSFpmNJI7JQj8CaJGolFJKZSBREnlu2XP8+etP/PmVB4753WHVKhLy\\nPES31hAXZ1nuJtWj4ZWyK5sW01ZKKaXUfzPihxGs2Daf/UsLkzs6CsJXQfHivDURIiNhzhwoXdre\\nWSr1Ly0EHzBjxozB3OHpcsYYxowZY3P8r7/+ypgxY7h06dJ/7ksppe5G07dOZ1rkFLauKorn8Yuw\\nZAlUqsTPP8Po0RAYCN272ztLpazpxBWV7TZv3oyPj4/N8b/++itjx46lW7duFLhpOl9W+1JKqbvN\\nN/u+YeCqAfy01odyu0/AF19Aw4b8/Td07QrFisEnn+hyN+ruk+FIojEmwRhTLennxKT3GW3xOZfy\\nvWvKxilEHI6waos4HMGUjVPslNGdUb169Wwr7LKzL6WUymkbjm2g69ddmb2tGPU2nIDx41OGDAcM\\ngCNHIDQU8ue3b55KpSezy83jgBOpfs5ss2nSijGmgzFmqTHmuDEm2hjzpzFmkjEm701xHsaYmcaY\\nC8aYf4wxPxhjKqbTn6sx5m1jzOmk/jYbY+rYkos9VC1alU5fdUopFCMOR9Dpq05ULVrVrnn9/fff\\nvPzyyxQtWhQXFxfKlSvHtGnT0jxyb+fOndSuXRs3NzeKFy/OxIkTCQ4OTnP5+uZLxH/99Rft2rXD\\ny8sLV1dXfH196dixI/Hx8cyZM4fnnnsOgDJlymCMwRjDkSNH0u0LYNeuXbRr146CBQvi5uZGuXLl\\nmDRp0i3P87333sPf3x9XV1eqVavGpk2b8Pf3p2fPnikxGV2O79mzJ/7+/lZtUVFRDB8+nBIlSuDs\\n7EyJEiWYMGECiYmJKTHXr19nwIAB+Pr64uLigpeXF40aNeKPP/5IiXn//fd5+OGHcXNzw8PDg4CA\\nAH1Un1L3uNDQUIo9VozaH9fm+bVx9Fh1Evr0gddfBywTVObOhTfegFq17JysUhnIbOLK2FQ/j8mm\\n4/0POAmMwFKAVsYyi7q+MeYpEUk0lr+hvwX8gQHA5aT4CGNMZRE5kaq/z4EWwKvAIaA/sMYYU0NE\\nfs2mnLNN/RL1WdxhMZ2+6sSLAS8Ssj2ExR0WU7+E/RbESkxMpEWLFuzcuZNx48ZRsWJFVq5cyZAh\\nQzh//jwTJ04E4MKFCzRs2JCiRYvyxRdf4OzszLRp01KKucy0aNECDw8PQkJCKFSoECdPnmTVqlUp\\nx37jjTcYP348YWFhKaOGRYoUSbevrVu3Uq9ePUqXLs20adPw8fFh//797N69O9McZs6cyeDBg+nV\\nqxcdO3bk4MGDdO3alStXrmTtC0sSHx9P06ZN2bt3L6NGjaJixYps2bKFN998k0uXLvHuu+8CMHjw\\nYJYvX87EiRMpU6YMFy9eZOPGjSnHDQ0NZejQoYwePZratWsTHR3N7t27070/Uyl1bwgNDaX3kN7c\\n6HqDFn/Bhz8mstrBgUu1atHVGA4fhhdfhBo1YNQoe2erVCZEJMc2wDOdtu5YltBpkPS+TdL7+qli\\nHgIuAR+kanssKe65VG2OwJ/AcltzqlKlimRm7969me6/HaN+GiWMQUb9NCrb+76V4OBgsfxnt/j2\\n228FkNmzZ1vF9erVS5ydneX8+fMiIjJixAhxdnaW48ePp8RERUWJl5eXVX8iIoAEBweLiMj58+cF\\nkGXLlmWY0+zZswWQ/fv3p9mXui8Rkdq1a4uPj4/8888/tp6yJCQkiI+PjzRv3tyq/euvvxZAevTo\\nkdJ28/eTrEePHuLn55fyfu7cuQLIunXrrOLGjx8vTk5OcvbsWREReeSRR2Tw4MEZ5ta/f395/PHH\\nbT6Xu92d+H1R6l5TvExx4UUkoAdy3SDbQHKD+Pn5SVycSI0aIvnyiRw6ZO9M1b0I2C45VLfZPLvZ\\nGPOwMWaUMeYzY8zcm7YvbCxIz6fTvC3ptVjSa2vglIik3LwnIlexjC62SfW51kAcsChVXDywEGhq\\njHGx9dxyUsThCEK2hzCqzihCtoekuUcxp0VGRuLg4EDXrl2t2rt160ZsbCybN28GYMuWLWnuD3Rz\\nc6NFixaZ9l+wYEFKlizJa6+9xowZM9i/f/9t5xoVFcXGjRsJCgrC3d3d5s+dOHGCEydO0LFjR6v2\\nNm3a4Oh4e3O3Vq9ejZ+fH0899RTx8fEpW5MmTYiLi2PLli0AVK1alTlz5jBx4kS2b99OQkKCVT9V\\nq1bl119/ZcCAAfzwww9ERUXdVj5KqbvDjfgbHK95nDIGVn4J5wRaAv8Ax44dY/x42LwZQkKgRAl7\\nZ6tU5mwqEo0x3YHfgNFYLu/WTme7XXWTXvclvT4C/J5O3B7A1xiTJ1XcYRG5+W/VPYAzcNetNpV8\\nD+LiDosZV39cyqVnexaKly5dokCBAjg7O1u1e3t7p+wHOH36NF5eXmk+X7hw4Uz7N8YQHh5OQEAA\\nI0aMoGzZspQsWZKQkJAs53r58mUSExOzPJHl9OnTAGnyz5UrF4UKFcpyHgDnzp3j6NGjODk5WW3V\\nqlUD4OLFiwB8+OGH9OvXj1mzZlG1alW8vLwYPHhwSjHYvXt3QkJC+Pnnn2natCkFChSgffv2Nl3G\\nV0rdXRISEwj6JohiHhA+A0wiNAPOJu338mrPm2/Cs89aZjUrdbezdSRxFLAMy+XiYiJS4qat5O0c\\n3BhTDMvElx9EZHtScwEs9yHeLPkmLQ8b4+66R6NvO7XN6h7E5HsUt53adotP3jkFChTg0qVLxMbG\\nWrWfOXMmZT9Y7hE8d+5cms+fPXs2TdvNSpYsydy5czl//jy//PILDRo04KWXXuK7777LUq4eHh44\\nODhw8uTJLH0u+f7Gm/NPSEjgwoULVm2urq4Aab6P5KIvWcGCBSlRogTbtm1Ld2vVqhUAefLkYdKk\\nSRw4cIAjR47w+uuvM336dMYmPXfLGEO/fv3YunUrFy5c4IsvvmDr1q0EBgZm6RyVUvYlIgz4bgDr\\ntn/Dz/Pz4REHTYG/kva7uRUhPv4L/P1h+nQ7JqpUFthaJHoDH4vI7d3ln46kEcFlQDzwXHb1a+Ox\\n+xpjthtjtp8/n94V8DtjWM1haSap1C9Rn2E1h+VYDjerW7cuiYmJhIWFWbWHhobi7OxMjRo1AMtS\\nNJs3b+bEiX/nDUVHR7Ny5Uqbj2WMoXLlykydOhWA33+3DBi7uLik9JcZd3d3atWqxbx5824Zm5qP\\njw8+Pj5pznHp0qXEx1uv3uTn52eVG8CVK1fYtGmTVVyzZs04fvw4efLkISAgIM2W3giln58fQ4cO\\npWLFilb9J/Pw8CAwMJBOnTqlu18pdfcaHzmeLzeG8Msyb4pdjeXnkSO55OeHMQZfXz8ee2wTV67k\\nZv58yJfP3tkqZRtbb8jaCDwM/JgdBzXGuGG5x7AkUFesZyxf5t/RwtQKpNqf/OqXSVyG00NF5DPg\\nM4CAgADJKO5B0Lx5c2rVqsULL7zA+fPneeSRR1i1ahUzZ85kxIgRKcXOkCFDCAkJoWnTpgQHB+Pi\\n4sLUqVNxcXHJ9Akuu3fvZtCgQQQGBlK6dGkSEhKYM2cOjo6ONGjQAIAKFSoA8NFHH9GjRw+cnJyo\\nVKlSmkvgAO+88w5169alRo0aDB06FB8fHw4dOsSvv/7Khx9+mG4ODg4OBAcH06dPH3r37k3Hjh05\\ndOgQkydP5qGHHsLB4d9/KzVv3pyHHnqIPn36MHbsWGJiYpgyZQp58uSx6jMoKIjZs2fTsGFDhg4d\\nymOPPUZsbCwHDx5k+fLlLF26FHd3d2rUqEHr1q2pWLEiefLkYd26dezatYsePXoA0LdvX/LmzUuN\\nGjXw8vLir7/+4ssvv6RJkyZZ+K+olLKnGTtmMCF8NDu/9cbn4HlYsoTGrVpxZPx4wLJ2ds+eliUS\\nn3zSvrkqlSW2zG7Bcn/fbqALUBDLCKTVZutMGcAJWAlcA6qns38WcCKd9jnA0VTvRwOxgPtNcWOA\\nGMDFlnzsMbvZntKbvXv16lXp37+/eHt7i5OTk5QpU0amTp0qiYmJVnE7duyQmjVriouLixQtWlTG\\njRsnAwcOlPz581vFkWpG8tmzZ6V79+5SpkwZcXNzEw8PD6lTp46sXr3a6jNjxoyRokWLioODgwBy\\n+PDhNH0l27lzp7Rs2VIeeughcXV1lXLlysnkyZNvee7Tpk0TX19fcXFxkSpVqkhkZKTkz59fXnnl\\nFau49evXS0BAgLi5uUmZMmXkyy+/TDO7WUQkOjpagoODpVy5cuLs7CweHh4SEBAgwcHBEhcXJyIi\\nw4YNk8qVK0u+fPnE3d1dHn30UXn//fdT+pgzZ47UrVtXPD09xdnZWfz9/eWVV16Rq1ev3vJ87kb3\\n2++LUreydN9ScRptZGOVwiIg8uWXVvv37xfJnVukTh2R+Hg7JanuK+Tg7GZjOV7mjDGuwKdAt4xr\\nTbnlqKQxxgHL7ONWQEsRSTMyaYxpCywB6onIuqS2fMBhYL6IDEhqexzYCfQUkS+S2hyxTLA5ICKt\\nbnliWEYSt2/fnuH+ffv28fDDD9vS1QMnISGBJ554gkKFCvHjj9kyyJyjtm/fTtWqVZk7dy7PPvus\\nvdO5L+jvi3qQbDy2kcZfNGTx6ry03HQB3n8fBg5M2R8XBzVrwv79sHs3FC9ux2TVfcMYs0NEAnLi\\nWLZebp4BBAJLgT+wjODdjo+AjsAE4B9jTPVU+06I5bLzcmAzMM8Y8yr/LqZtgJTn14nIL8aYY05N\\nrgAAIABJREFURcB7xhgnLEXki0AJIOg281OZGDVqFKVLl8bPz4+LFy8yc+ZMdu/ezapVq+yd2i0d\\nPnyYjz76iNq1a5MvXz727dvHxIkTKVGiBM8884y901NK3WP2nNtDy/kt+CjCzVIgjhljVSACBAfD\\ntm0QFqYForo32VoktgFeFZH3/+Pxmie9jkzaUhsLjBHLU1daAu8AHwOuWIrG+iJy/KbPPIel4BwP\\n5Ad2Ac1EZOd/zFOlwxjDuHHjOHXqFMYYKlWqxNKlS2nevPmtP2xnbm5u/P7778ydO5fLly/j4eFB\\no0aNmDx5cpbWXFRKqeNXj9MstBnD1yXwXMR1y0OYR4+2ilmyBCZNguefhw4d7JSoUv+RrZebTwPd\\nRST8zqeUs/Rys1LZR39f1P3uUvQlas2qRfPvD/Pu8hvQrZtlZkqqCXC7d8NTT0GFCrBuHbi52TFh\\ndd/JycvNti6BMxvQpT+VUko9sKLiomi1oBVV1v3FO9/GQKtWMGuWVYF47hy0bg0PPQRLl2qBqO5t\\ntl5uPgp0McaEA6tJZxFrEZmVnYkppZRSd4v4xHg6f9WZ/D9u4osluTC1a8OiReDklBITEwPPPANn\\nz8L69VC0qB0TViob2FokJj9DzQ9omM5+wbJ0jVJKKXVfERFeWPECl8K/Ze3XTjhUqgjLl1sNE4rA\\nSy/Bhg2wYAEE5MjFQKXuLFuLRH0MuVJKqQfS6IjRbF/1OZsXu+Do5wfffWe5npzK++9brjy/8QZ0\\n7mynRJXKZjYViSJy9E4nopRSSt1tPt72MQuXjmfHQldcPQpBeDh4eVnFrF4NQ4dCu3aQ9Fh2pe4L\\nto4kKqWUUg+Ur/Z+xaQF/dm+wI28Trkx4eHg62sV88cfEBgIjz4Kc+dazWFR6p6X4f/OxphfjTHt\\nTGYP5rWO9zHGfGCMGZZ96SmllFI5b+2RtQz8siuRC93winHErF4N5ctbxVy6ZJng7OJiuUXxpke8\\nK3XPy+zfPHOxPGnlhDFmmjGmvTGmlDEmnzHGxRjjbYx5yhjzijHmR+AIUA7LU1nUXW7z5s107twZ\\nHx8fnJ2dyZcvH1WrViU4OJjTp0/bO707asyYMfz000/2TkMpdZfadWYXQV+0Zs2CXPhfSsQsXw5V\\nqljFxMVBp05w9Khl4Ww/Pzslq9QdlGGRKCJTgVLAVKAp8BXwF5blb6KAk8AGYBJwHmgoIk1F5K87\\nnbT6b959911q1qzJ+fPnGT9+PD/88AMLFy6kadOmfPLJJzz//PP2TvGOGjt2rBaJSqk0QkND8XnU\\nhycnV+bLWdd45HgsZvFiqFcvTeyQIfDjj/DZZ5bnMyt1P8r0nkQRuQq8C7xrjPEFqgNFsTwq7yKW\\n5zhvFZGYO53ofWHKFKhaFerX/7ctIsLycM9hOXOVPiIigldffZVBgwYxbdo0q31PP/00I0aMICws\\nLEdyyWkxMTG4uLjYOw2l1F0oNDSUPoP7ENspmrBV0OAY9HF2pN61awTdFPvppzB9uqVQ7NnTHtkq\\nlUNE5IHeqlSpIpnZu3dvpvuz5KefRAoVsrym9z4HNG3aVDw9PSUmJsbmz5w6dUqeffZZKViwoDg7\\nO0vFihXlyy+/tIqZPXu2ALJx40bp2LGj5MmTR7y8vGTixIkiIvLdd99J5cqVxd3dXZIehWj1+bp1\\n60rNmjVl6dKl8sgjj4izs7OUK1dOFi1alCafX3/9VVq1aiX58+cXV1dXeeqppyQyMtIqpkePHlKs\\nWDHZtGmT1KhRQ1xdXWXgwIGCZU1Pqy04ODgl/4z2Z+bgwYPSvHlzcXNzE09PTxkyZIh8+umnAsjh\\nw4dT4tLr6/DhwwLI7NmzrdrXrl0rDRo0kDx58oi7u7s0adJEfvvtN6uY1atXS40aNSRfvnySO3du\\nKVu2rIwdOzZl/59//ilt27YVT09PcXFxkeLFi0uHDh0kLi4u0/P5L7L190WpHORTxkcc+iFzKiIC\\nMjDp99/Pz88qLiJCxNFRpFkzkfh4u6SqHnDAdsmhGklnN+ek+vVh8WLLjSwvvgghIZb3qUcW76D4\\n+HjWrVtH+/btcXZ2tukz//zzD3Xr1uXy5ctMnDiR4sWLM2/ePJ599lmioqLo27evVXyPHj3o3r07\\nffv2JSwsjNdff50rV66watUqRo4cSZ48eRg2bBht27bl4MGDVnkcOHCAgQMHMmbMGLy8vAgJCaFz\\n5854enpSP+k72rlzJ7Vr1+bxxx9nxowZuLu788knn9CoUSM2bdpElVT3DV29epXOnTvzv//9j4kT\\nJ+Lm5kaXLl2oUaMGPXv2pF+/fgD4+Pjg4uLC5s2brc4lNDSU6dOnZ/os4tjYWBo3bkxMTAwhISF4\\nenoyc+ZMvvrqK5u+3/SsXLmSNm3a0KJFC+bNmwfAW2+9Re3atdm9ezfFixfn0KFDtG7dmg4dOjB6\\n9GicnZ3Zv38/hw4dSumnRYsWeHh4EBISQqFChTh58iSrVq0iMTHxtnNT6n50PfY6J+ucYOYW6PEb\\njAI+SNp37NixlLhDhyxPVCldGhYuhFy57JKuUjknp6rRu3XL0ZHEZKNGiYDlNQedOXNGAHnttdfS\\n7IuLi7Pakn344YcCSEREhFV8w4YNxdPTU+KT/imdPBKXeiQrLi5OPD09xdHRUQ4dOpTSvmzZMgFk\\n7dq1KW1169YVQDZv3pzSFh8fL+XKlZNatWqltDVo0EDKly9vNRIaHx8v5cuXlzZt2qS09ejRQwBZ\\nunRpmnMFZOTIkZl+Vxs2bBAXFxcZPHhwpnHJI4Y///xzSltiYqJUqlTptkcSS5UqJQ0aNLCKu3r1\\nqhQsWFAGDRokIiJhYWECyNWrV9PN6/z58wLIsmXLMs0/u+lIorrXRMdFS8PZ9eWzxy0jiGNuupKQ\\nPJJ49arII4+IeHiI7N9v35zVg40cHEnUFZ1yWkSEZQRx1CjLa0SEvTPizJkzODk5WW3x8fEAREZG\\nUqxYMerddON2t27dOH/+PHv37rVqb968ecrPjo6OlC5dmrJly1KixL8P7SmftIzE8ePHrT5bvHhx\\nqlevnvI+V65cdOzYka1bt5KYmEh0dDTr1q2jY8eOODg4EB8fT3x8PCJCo0aNiIyMtOrPycmJli1b\\nZvn7OHLkCO3ataNp06a88847mcZu2bIFX19fqlWrltJmjOGZZ57J8nEB9u/fz8GDBwkKCko5v/j4\\neNzd3alRo0bKOVauXBknJyc6d+7MV199xblz56z6KViwICVLluS1115jxowZ7N+//7byUep+FpcQ\\nR+ewQDpMj6DPLzDF0ZExqfa7u7szYcIEEhIgKMiyJuJXX1lGEpV6EGiRmJMiIiyXmhcvhnHj/r30\\nnEOFYsGCBXF1dbW6fAJQqFAhtm3bxrZt2+jTp4/VvkuXLlGkSJE0fXl7e6fsT83Dw8PqvbOzc7pt\\nADdu3LBqL1y4cJrjFC5cmNjYWM6fP8+lS5dISEjgzTffTFPUTp8+ncuXL1tdSvX09CRXFq8H/f33\\n37Rs2RIfHx/mz5+Pwy1Wxj19+jReNz19IaNzsUVysderV68057hixQouXrwIQOnSpVmzZg2JiYk8\\n++yzeHt7U716ddatWwdYCtXw8HACAgIYMWIEZcuWpWTJkoSEhGR4bKUeJImSyPPLnqPRtOW8sAMY\\nPpxis2fj5+eHMQY/Pz8+++wzgoKCeP11WLECPvgAGjSwd+ZK5Ry9JzEnbdtmfQ9i8j2K27blyH2J\\njo6O1KlTh/DwcGJjY1OKNUdHRwKSnka/YsUKq88UKFCAP//8M01fZ86cSdmfXc6ePZtum7OzM56e\\nnkRHR+Pg4ED//v3p3r17un2kLupsXAc+RUJCAoGBgVy5coWff/6Z3Llz3/IzRYoUSTOampz3zVxc\\nXIiNjbVqSy76khUsWBCASZMm0ahRozR9pL6Hs379+tSvX5+YmBg2btzI6NGjadGiBUeOHKFQoUKU\\nLFmSuXPnIiLs2rWL6dOn89JLL+Hv72814qvUg0ZEGLDyZQKmhPLyNizP1Js0iSBjCOrWzSp27lzL\\nwhQvvggvvWSffJWyFx1JzEnDhqUtBuvXz7HlbywpDOPChQsMHz7cpvi6dety4sQJNm7caNU+f/58\\nvLy8qFChQrbldvz4cbZs2ZLyPiEhgbCwMKpVq4aDgwO5c+emdu3a7Nq1iyeeeIKAgIA0my2cnZ2J\\njo5O0z5kyBDWr1/Pt99+S7FixWzqq3r16hw7doytW7emtIkIX3/9dZpYPz8/fv/9d6u2lStXWr0v\\nV64c/v7+7NmzJ93zq1SpUpp+XVxcaNCgAcOGDeOff/7h8OHDVvuNMVSuXJmpU6cCpMlBqQfNGz+O\\npNSEEAb9DDJwILz9NqTzj8otW6BPH8sf0++/b4dElbIzm0cSjTElgU6AL5Z1ElMTEemVnYmpO6Nh\\nw4ZMnjyZ1157jd27d9O9e3dKlCjBjRs3+Ouvv1i4cCG5c+dOGYXr2bMn77//Pu3bt2fChAn4+PgQ\\nGhpKeHg4n376aZYv52amcOHCBAYGMnbsWDw9PQkJCeGvv/6yukQ6depU6tSpQ9OmTenVqxdFihTh\\nwoUL7Ny5k4SEBCZPnnzL41SoUIGVK1fSrFkzPDw8KFq0KJGRkXzwwQeMGDGCmJgYq2LVx8cHHx+f\\ndPvq2bMnb731Vsr3kzy7+fLly4D1yGbnzp0ZP348EyZMoHr16qxfv54FCxZY9WeM4aOPPqJNmzbE\\nxsbSqVMnChUqxNmzZ9m0aRO+vr4MGTKETz75hMjISJ5++mmKFy/OhQsXmDRpEkWLFuXRRx9l9+7d\\nDBo0iMDAQEqXLk1CQgJz5szB0dGRBnq9TD3Apmx4i4eCJzFkC0j//pj33ku3QDx+HNq2heLFISwM\\nnJzskKxS9mbL7BagLRALxAOngMM3bYdyaqZNdm92md18F9iwYYN07NhRihYtKk5OTpI3b14JCAiQ\\n0aNHy6lTp6xiT506Jd26dbNpncT9N037S17/MLXkGb0zZsxIE7ds2bKUdRLLli0rCxcuTJP73r17\\nJTAwUDw9PcXZ2VmKFSsmrVq1kpUrV6bEJK+TmNG5P/HEE+Li4pIy4zg4OPi210k8cOCANG/eXFxd\\nXaVQoUIycOBAmTx5sgBy5cqVlLjo6GgZOHCgeHt7S548eaRTp07y888/p7tO4qZNm6RFixaSP39+\\ncXFxET8/PwkMDJRNmzal7G/durX4+PiIs7OzeHt7S4cOHeSPP/4QEZGzZ89K9+7dpUyZMuLm5iYe\\nHh5Sp04dWb16dabn8l/dr78v6v7wydYQmVDLMos54YUXRBIT0427fl3k8cdF8uYV2bMnh5NU6hbI\\nwdnNxnK8zBljfgNOA0Eicj4ba1S7S1rYOcP9+/bty3SdPJU96tWrR3x8PBs2bLB3KtmiZcuW7Nu3\\nj4MHD9o7lRylvy/qbrXgtwUceLkroyIhoU9vcn3yKaQzMS0xEQID4euvLZNVnn7aDskqlQljzA4R\\nse3+qv/I1svNJYGh91uBqFR2mDp1Knny5KFMmTJcu3aNsLAwVq5cqTOJlbpLfPvnt/w1MIjgSIjv\\n2R3HDApEsKxO9tVX8M47WiAqZWuR+AdQ8E4motS9ysXFhWnTpnHs2DESEhIoV64cM2fOpFcvvU1X\\nKXuLOBzBjv7tGLNWiOvWFafPZ2dYIE6eDBMnQt++lucyK/Wgs7VIHAa8Z4z5WUQO3TJaqSxau3at\\nvVO4bf3796d///72TkMpdZOtJ7ey9sVmjP0xgZjOHXGZMzfDAnH6dBgxArp2hY8/Tncui1IPHFuL\\nxDFYRhL3GWP2A5du2i8iUjc7E1NKKaVu1+/nfmdF33qMWxNLVIe2uM9bkOHDlmfPhgEDLLOZ58zR\\nZzIrlczWIjEBSLui8gNCRLK8MLNSDxpbJsEplRMOXjpIWJ+nGLcqmuttW5BnQViGld+iRdC7NzRp\\nAgsX6lI3SqVmU5EoIvXucB53LScnJ6Kjo3F3d7d3Kkrd1aKjo3HSv2GVnZ38+yTzeldj7PJr/N2y\\nMfkWLwHH9P+q+/Zb6NYNataEJUvAxSWHk1XqLqdPXLkFLy8vTp48SVRUlI6UKJUOESEqKoqTJ0+m\\n+xxrpXLK+X/OM6t3FYKXXOJys3rk+2ZlhkODP/wAHTtC5cqWpW50HECptLLyxJUiwFCgLlAAy32J\\nEcBUETlzZ9Kzv3z58gFw6tQp4uLi7JyNUncnJycnChcunPL7olROu3rjKp/1q8KosLNcaPgUhZat\\nybBA3LgR2rSBsmVhzRrQ/22VSp9NRaIxpiywHvAANgIHAG9gENDdGFNbRPbfsSztLF++fPqXn1JK\\n3aWi4qL49MWqjAw9zrl6VfFa+RM4O6cbu3OnZf1DHx8ID4cCBXI4WaXuIbaOJL4F/A08KSJHkhuN\\nMX7A90n722d7dkoppVQmouKi+LT34/zvy/2crvkYRb6LzPDmwj17LBNUPDwsl5sLF87hZJW6x9h6\\nT2J9YFTqAhFARI5iWR6nfvampZRSSmUuKi6KL7tVYvDcvzhVqzJFwjeDq2u6sQcOQKNGlgHGH3+E\\n4sVzOFml7kG2FonOwLUM9l1L2m8TY4yPMeZDY8xmY0yUMUaMMf43xfgntae35b8p1tUY87Yx5rQx\\nJjqp3zq25qOUUureExX7D18/U4F+iw9ypOmT+Py4Fdzc0o09dgwaNoT4eMsIYqlSOZysUvcoW4vE\\nX4EBxhireGNZPPClpP22Kg10Ai5juc8xM5OAGjdtNxernwN9gNFAS+A0sMYYUzkLOSmllLpHRMVc\\n57tW5Xn226McaFuHTUH98S9TBgcHB/z9/QkNDU2JPX3aUiBevQrffw8VKtgxcaXuMbbekzgOWIHl\\niSuLsBRi3kBHoAzQIgvHjBSRwgDGmN5Ak0xiD4nIlox2GmMeA7oCz4vI7KS2dcCepJxbZyEvpZRS\\nd7moG9dY17Qcz0SeZl9QU3Y2DaLvCy8QFRUFwNGjR+nbty8AzZoF0bixpVAMD4fHH7dn5krde2xd\\nTHu1MaYlMB4YCRhAgB1ASxH53tYDikji7SSagdZAHLAoVf/xxpiFwGvGGBcRicnG4ymllLKTqH+u\\n8HODcjTfeo7dfdtS6ZNvaF6iREqBmBIXFcWIEZOZNi2IAwdg1SqoUcNOSSt1D7N5MW0RWS0iAUBe\\noDiQV0SqiciaO5YdTDLGxBtjrhpjlhtjKt60/xHgsIhE3dS+B8t9kqXvYG5KKaVySNTfF9ldszT1\\nt55j5+DOVPp0CRjDsWPH0ol25/jxEHbtgq+/hgYNcjxdpe4LWX7iiohEicjJdAqz7BQDfAr0wzJz\\n+n9ARWCTMaZ8qrgCWO5tvNmlVPuVUkrdw6IuneXP6mWotusiW0b25ImpC1L2+fr63hTtAiwFajB/\\nPrTIys1QSikrGV5uNsaMBmaKyKmknzMjIvJmdiUlIqeBF1I1rTfGrMYyQjgSePa/9G+M6Qv0hfT+\\ngFFKKXW3iDp3kqNPVaDiob/ZNKEftV7/xGr/hAkT6Nu3b9IlZ0dgMdCYvn030bHjU/ZIWan7Rmb3\\nJI4BVgOnkn7OjADZViSmewCR48aYDUC1VM2XAb90wpNHEC+lsw8R+Qz4DCAgIEAfyKyUUnehqBOH\\nOf1UJUqeus76dwdQf/AHaWKCgoIAeP31URw7NhFoTY8eW/n0Uy0QlfqvMrzcLCIOIrI11c+Zbbly\\nLmUre4ASxpibH81eAYjF8vhApZRS95gbh/ZzseqjFDl9ncgP/5dugZisS5cgGjU6BHRmyhSYM6da\\nhrFKKdvZdE+iMcbXGJPuk9KNMY7GmDt+zTbpGLWAn1M1fws4YVmKJyUfIBD4Xmc2K6XUvefGvt+5\\n8mQl8l2OInLGSBq/+HaGsbGx8OyzMGsWjBoFr76ag4kqdZ+zdZ3Ew1gWst6azr7HktptHk00xnRI\\n+rFK0mtzY8x54LyIrDPGvAskAluwXDIuB4xIapuQ3I+I/JK0buN7SUXsYeBFoAQQZGs+Siml7g43\\nftnOP/Vr4hgbS+SsMbTqGpxh7PXr0KEDrFkDkybB8OE5mKhSDwBbi0STyT4nLMVbVoTd9P7jpNd1\\nQD0sl5FfBHoDeYCLwE/AWBH586bPPoelcBwP5Ad2Ac1EZGcWc1JKKWVHN7ZsILZRA2JMHFu/nEDb\\nZ17PMPbCBcvM5e3bYeZM6NUrBxNV6gGR2ezm/FgvIVPMGFPypjA3oAdwJisHFZHMik5EZBYwy8a+\\nooEhSZtSSql7UEzEDyQ83YyLrgns/HIKz7TM+Lrx0aPQtKnl9ZtvoE2bHExUqQdIZiOJg4BgLDOX\\nBfgqgziTFKeUUkplWcyKZcgz7TmWL5Hf5r1Lp6YZ/5t/zx5LgXj9uuVZzLVr52CiSj1gMisSlwJH\\nsBSBs7Bczj14U0wMsFdEdt+R7JRSSt3XYhYtwCEoiN89hT9D36dzg4EZxm7aBC1bgqsrREZCpUo5\\nmKhSD6AMi0QR2YXl/j6MMQKsEJGLOZWYUkqp+1vs5zNw7NOXn4vB4dDpBNXpn2HsypXQsSP4+Fgm\\nqpQokYOJKvWAsmkJHBH5QgtEpZRS2UKEmHHBOPfuS4Q/HFz4caYF4hdfWO47rFABNmzQAlGpnGLr\\n7GaMMY9gmW1cDnC9abeISMPsTEwppdR9KD6eG32fx3X2l4RWMiTO+Ixnq/XOMPztt2HYMGjYEJYs\\ngbx5czBXpR5wNhWJxpgnsSxPcwQoA+wGPABf4AT6ZBOllFK3cv060e1b4xYewVt1clH+k69o83Db\\ndEMTEy3F4bvvQmCgZTTRxSWH81XqAWfT5WZgIvAN8AiWiSy9RMQfaIRlEe3xdyQ7pZRS94fTp7lR\\nszpOP0YwsK0Lf3cbzqDmr+Dg4IC/vz+hoaEpoXFx0LOnpUB8+WWYP18LRKXswdbLzZWwrIcoSe9z\\nAYjIT8aY8cAk4MnsT08ppdQ9b+9eYpo2IuHcaZ7rkY9Har7KpIGTiIqKAuDo0aP07dsXgLZtg+jU\\nCVatgnHj4I03wGS6sq5S6k6xtUh0Bv4RkURjzCWgSKp9fwKPZntmSiml7n3r1hHXuiVXEv/h+Ze9\\nmfb6OppUaZJSICaLioritdemMH16EFu3wiefQL9+dspZKQXYXiQewHL/IVjuR3zeGLMi6f1zZPGJ\\nK0oppR4ACxaQ0KM7Bx9KYMDAUsweFIFPPh+OHTuWTnAxTpyYz7lzEBYG7dvneLZKqZvYek/it0Cd\\npJ8nAs2Bv4HLQFdgavanppRS6p4kAm+9BV27srFoPAPeeIKFQ7fgk88HAF9f35s+UB7YhDHFWbNG\\nC0Sl7ha2rpM4RkT6JP38A1AdeA/4HGguIh/duRSVUkrdM+LjoX9/eO01FjwKb41uyJIX11LQvWBK\\nyIQJE3B3d096Vw3YALgwfvwG6tWzQ85KqXTZvE5iaiLyC/BLNueilFLqXvbPP0jnzpgVK5hcE34Z\\n0IFvnpmHi6P11OSgoCAAhgwJ59y5j3B0PM9bb+1iyJA29shaKZWB2yoSlVJKKStnzyItWyI7d9D/\\naUh8sR/zn/6IXA650oSKwPHjQVy4EETlyvDdd7nx9vbP+ZyVUpnK8HKzMeawMeaQjdvBnExaKaVU\\nzgsNDcXf3z/t2oZ//IFUf5KY336hTaBQYOhIQlqEpFsgXrsGHTrAiBGWZzGvXw/e3jl8Ikopm2Q2\\nkriOf9dFVEop9QALDQ2lb9++adY29PzzTxpPn86VhH9o0j2Brs9NZXCNwen28ccf0K4d7N9vWSh7\\n8GBdA1Gpu5kRebDrwICAANm+fbu901BKqbuav78/R48etWrrCMw1cNbLlUadYxn13Gy6P9Y93c8v\\nXQrdu4OrKyxaBPXr50DSSt2HjDE7RCQgJ45l6xI4SimlHmA3r204FFgMbPeGGs8n8u6LS9ItEBMS\\nYORIywhi+fKwY4cWiErdK2yauGKMSf+fhqmIyNz/no5SSqm7ka+vL0ePHsUBy/pnA4CwMtC9Hazu\\n+z11/eum+cylS9C1K6xZA716wfTplpFEpdS9wdbZzXMyaE99rVqLRKWUuk9NmDCBYX368Hl0NM2A\\ndwPg1XrwZrnx6RaIv/5qWRT7xAn49FNIejSzUuoeYmuRWCKdtoJASyxPXOmWbRkppZS66wRVrkzr\\nvHlxuRFNv6bw+SO5eLvCWwx9bmia2HnzLEVhgQIQGQnVq9shYaXUf2ZTkSgiR9NpPgrsNMYYYAiW\\nYlEppdT9ZskS6N6dXM6GRs87cKXKIxwN+o5i+YpZhcXFwf/+Bx98AHXqwOLFULiwnXJWSv1n2TFx\\nZT3QIhv6UUopdTdJTITgYGjfnsNF3SnT8xoejVqy8fmNaQrEM2egYUNLgfjKK/DDD1ogKnWvy44n\\nrlQHrmdDP0oppe4WV6/Cs8/Ct9+yunYR2tY5zaC6w5jYcGKaRbI3b7YskH35MoSGWiarKKXufbbO\\nbh6dTrMz8CiWUcTp2ZmUUkopO/rzT2jTBjl4kHEdPJlY6QKftZpDj8o9rMJELJNSBg6E4sVhyxao\\nVMlOOSulsp2tI4lj0mmLwXJf4gRgUnYlpJRSyo5WrICgIGJzGdo978q20vBTYAQ1fWtahd24AS+9\\nBLNnQ/PmlhFEDw875ayUuiNsnbiii24rpdT9LDERJk6E0aM5X7YY1Z4+RZ4yFdja5Vv88/tbhR47\\nZlneZscOGDXKcttirrSPaVZK3eOy455EpZRS97Jr16BnT/jmG7bWL0vdp/6i0SMtmd9+Pnld8lqF\\nrlxpCY2NhWXLoHVru2SslMoBNheJxphcQHegBlAMOAlsAr4UkYQ7k55SSqk76uBBy/2H+/bxSdcy\\nvFTmL16t+SqTGk6ymqBy7RoMGQIzZ0LFihAWBuXK2TFvpdQdZ9NlZGOMH7AH+BxoBnglvc4Cfk/a\\nr5RS6i4UGhqKv78/Dg4O+Pv7ExoaatmxZg0EBJBw6iTPvViEQeWPMLvtbKY0nmJVIEZ98/5SAAAg\\nAElEQVRGWiakfP45DB8O27ZpgajUg8DWkcTpQD6glohsSm40xtQEwoAPAb3ooJRSd5nQ0FD69u1L\\nVFQUAEePHqVvnz5UWLGCxxcv5lpZf2q1Ps+pQjH8FPgTtXxrpXz2xg0YORKmTYOSJWH9eqhZM6Mj\\nKaXuN7ZOSGkAjEhdIAKIyEbg9aT9NjHG+BhjPjTGbDbGRBljxBjjn06chzFmpjHmgjHmH2PMD8aY\\niunEuRpj3jbGnDbGRCf1W8fWfJRS6n42cuTIlAIRwB34PDqaxxcu5ECDyhR75giJ/n5s7b3VqkDc\\nsQOqVIGpU6FfP8uzmLVAVOrBYmuReB04l8G+c0BUBvvSUxroBFzG8rSWNJIe9fctlkvaA4BnACcg\\nwhjjc1P450AfYDSWZ0mfBtYYYypnISellLovHTt2LOVnP2Ajlj+Ah5eDMjV3UqdCczY+v5ESHiUA\\ny6P1xo2zPG/5yhX47jsICYE8eeySvlLKjmwtEucBL2Swrx8wNwvHjBSRwiLyNJZL1elpDdQEnhWR\\nBSKyOqnNARiWHGSMeQzLM6MHi8gMEfkRy59/x4BxWchJKaXuS76+vgDUB7ZjKRSfbgBTusD/nvof\\nyzovI59LPgD++MMyWhgcDB07wm+/QbNmdktdKWVnthaJB4DHjTG/GWPGGGNeTHr9HagMHDDGPJ+8\\nZdaRiCTacLzWwCkRiUj1uatYRhfb3BQXByxKFRcPLASaGmNcbDw/pZS6L00cN47xjo6EA2dzQbVu\\nsOb/7d13fFVF/v/x1ycJHUIxdEhClybFoPB1UQFdrCiKDVx3AUXXsmtdVxHWlt2197LYfxJcbCiK\\nuq59kaII0kSUltBrgEAIafP7Y27IJbmBAMm9CXk/H4/zODdz5p7MnccQPnfOlJPgqiZX8dBvHyI6\\nKpr8fHjiCejVy092fvNNmDQJGjWKdOlFJJJKO3HlmcC5FdA1xPVng147/KznI9EVWBQifTFwhZnV\\ndc7tCuRb6Zwr+rh7MX7bwPaB1yIiVc/q1Qx/8UXIzWVyXE2uvDyLzJpR3BV/J/ddeR8AqakwciR8\\n+SWcfTa88AI0bx7hcotIhVDaILFNuZaiuEbAqhDp2wLnhvhxko3wYxtLyqfvwSJSNb3/PowahcvO\\nZurYYYyoPoVOcV344LIPaNuwLc7Bq6/Cn//s92B+8UUYNQrMIl1wEakoSrstX2p5FySczGwMMAYK\\nx+uIiBwVsrLgttvg6afJ6dmdq4bX47XMt7ms62U8f87zxNaIZeNGGDMGpk6Fk0/2wWKbcHcFiEiF\\nd0jb8plZN+AUfA/dNuAr51x5PM5Nx/cWFtUo6HrBOdRC3gX5toW4hnNuAjABICkpyR1+MUVEKpAl\\nS+DSS2HBAlJHXUj/Dv9jS/YyXjz3RUb1GoWZ8e67fkmbjAx45BG48UaIKu3odBGpUkoVJJpZDPAq\\ncBkQ/DDCmdkk4A9lvDXfYuC3IdK7AGmB8YgF+YaaWe0i4xK7ANn4CTciIkc35+CVV+CGG3C1a/P6\\n3y/hD9lv0jm2Mx8N+5xuTbqxfTv86U/w+uvQu7c/d+kS6YKLSEVW2u+Pf8MvLTMePz6xVuA8Hrgk\\ncC5LU4GWZnZKQYKZxQLnBq4V+AC/fuJFQfliAmX61Dm3t4zLJSJSsezYAcOHw+jRZCX1Yugdbfh9\\n9mRG9hzJd1d+R9fG3Zg8Gbp29TOWx4+HWbMUIIrIwZU2SLwcuN85l+ycS3XO7Q2ck4H7gSsO5Zea\\n2TAzGwYcH0g6M5BWEBROBWYCE83sUjMbHEgz4MGC+zjn5uGXv3nczK40s0H45W/a4ANbEZFKqcT9\\nloN9951ft+att/j5pt8Rf+YSPt+7hIlDJ/LSeS+x8pc6DBzon0A3bQozZ8I990C1auH/PCJS+ZQ2\\nSGwBzCjh2ozA9UPxVuAoWKD72cDP98C+tRTPAf4buDYFyAMGOOdWF7nXSOAVfLA6DWgNnOGcm3uI\\nZRIRqRAK9ltOTU3FOef3Wx4zpjBQzM+HBx+Ek07C5eXx1EMX0bn+67RsGM8PY37gnIQR3Hwz9OwJ\\n8+f7HVO+/x769Ins5xKRysWcO/i8DTNbCbzqnLsnxLXxwEjnXKWcG5eUlOTmzJkT6WKIiOyTmJhI\\namrxRSUSEhJYNXs2XHEFfPopu849g/MGbuSLHfO4rs91PHjaw7z975r85S+waRNcdRUkJ0NcXAQ+\\nhIiUCzP7wTmXFI7fVdrZzSnAWDPLD7xeDzQDLgXGAg+UT/FERKqe4P2Wg3VKTYXjjoOdO/nhb2MY\\nWOMNLCuKdy5+h7Z7L+D0ATBjBpx4Inz4ISSF5b8RETlalfZx893A2/jHwb/iF7JeBiQH0rVPsohI\\nGSm6fms1/Dfx/wD5jeO47+EhJNkEjm3cmS8vmcfnT1/A8cfDr7/Cyy/7QFEBoogcqdIupp0LDDez\\nvwP9KVwn8ZtyWidRRKTKSk5OZsyYMWRmZtIGeAM4Efjx1BO5Zmgms7e8yS39bqXdqmRO71Od9HS4\\n7jo/KaVhqBVmRUQOQ2nXSYwDdjnnFhF6T2URESkjI0aMAOeYc+ON3L11K2bGhNGncXObGdTMqsmj\\nx0/jjbvO4pHvoX9/ePpp/xRaRKQslfi42cyizexuM0sHNgI7zewdM2sQvuKJiFRBa9Yw4t//5rGt\\nW6nbry/3Pn8BV7f6L93jenP68h+5+dyzWLMGUlLg668VIIpI+ThQT+I1+EWyvwTmAO2A84Gd+GVn\\nRESkLDkHL70Et9wCOTmsvedWBjf8kJ/Wz+aMWuOY+dfxzMmI4dZbYdw4iI2NdIFF5Gh2oCDxKuAF\\n59zVBQlmdjXwtJld7ZzLLvfSiYhUFatW+TVrPvuM/FNO5vEru3H7yseJ3XUMbab/l08+G8SgQfDU\\nU9C5c6QLKyJVwYFmN7fFL3AdbDIQDSSUW4lERKqS/Hx45hno1g1mzWJF8m10v3ATtyx/lpbbhrPt\\nvsXkLB3EW2/Bf/+rAFFEwudAPYl18Y+Wg2UEzvXKpzgiIlXIsmUwejR88w25pw0i+fJ47ln1MLU3\\ntcYmf8yWdWcw7la4/XaoUyfShRWRquZgs5tbmlnboJ+jg9K3B2d0zq0o05KJiByt8vLgiSfgrrug\\nenUW//MWzox+m9WrPse+v47c//2Dm6+qx+23Q+PGkS6siFRVBwsS3y4h/b0QadEh0kREJNiSJTBq\\nFMyaRfZZZ3Dj2fV5bvMj2NaORE/7hmvO7M+dE6BFi0gXVESqugMFiZrBLCJyiFJSUhg7dixpaWnE\\nx8eTnJzs1z3MzYWHHoK774a6dfnm3hs5K/cNdm/cgs24g9/Fj+eez2uSmBjpTyAi4pUYJDrnXgtn\\nQUREKruUlJR9O6UApKamMmbMGBqkpXH222/D3LlknHsuZ3XKZ3r+47CxJ2dkf8QTz/SmY8cIF15E\\npAhzzkW6DBGVlJTk5syZE+liiMhRIDExkdTU1H0/VwPuBMYC0Y2b8NhpF3FbwiRcTCZdNv+Nidfe\\nSq/jqkWquCJSCZnZD865sOzOXqpt+URE5ODS0tL2ve4NvAIcB7xerS1/OT2eDR2foWHGSbxwxotc\\neMqxkSqmiEipKEgUESkj8fHxbEpNZRxwG7CR2pzT4XymXfQ+UdEbuanTUzx8ybVE2YGWqBURqRgU\\nJIqIlAXneH3IEBKffprWzvFijTO4dVg6OzpMok1eEl/c9DaJDbUPgYhUHgoSRUSO1IIF5F77J/p/\\n+zULYrozvEtfpg95Fcs1rm5yNc9d8xxmFulSiogcEgWJIiKHa+tWdt44nropz7PDNeTO5mOYePl/\\nyazzAhd2HsYzZz1N07pNI11KEZHDoiBRRORQ5eWx8o4JxD1xF7Wzd/BM3WE8NWoVvzaaQLcm3Xj4\\n9E8Y3H5wpEspInJEFCSKiJRSXh58+/evafHPP9E+cwFf1+jHo2MaMrXFmzSp04QJAyYwstdIYqL0\\np1VEKj/9JRMROYjdu+GtR1cT9+BtnLNrMmtiWnPv8KH8/dhpWFQUY/uN5faTbqdejXqRLqqISJnR\\nOgwiUuWlpKSQmJhIVFQUiYmJpKSkALBuHYy7dQ9PxN3HxeM7cdru95l6zjn85p4s/tZxChd1u5hf\\nrv+F+wferwBRRI466kkUkSot1FZ6V175FM8/15dmsxbwYN7NtGEVv/zfb7j2jA18nv8h/Zv3563f\\nTqNPyz4RLr2ISPlRkCgiVdrYsWMDAaIBg4FbaJvVnL99eyWn8RUZ7drzl4uTeKjGdNrVb8c7p7/D\\n0GOHakkbETnqKUgUkSotNTULvz/KaOrTlLu5let5mZ3AG2P+j983m0nd2g147JTHuLbPtVSPrh7h\\nEouIhIeCRBGpcnJz4T//gRdfBFhNNRyjuJP7eJpj2Mu/msH4y2B7w++4vs+fGXfKOBrVahTpYouI\\nhJWCRBGpMlasgJdfhlde8ZNSmsXl8uhxD3L+wntp47L5pg78+Xz4sQMk1Uli0shJdDimQ6SLLSIS\\nEQoSReSolpUFU6b4XsMvvoCoKDhzcD5TLp5Mn2l3Ywt+YXV8Y87tsY0Pe+dRfWt1xra8jfuvvD/S\\nRRcRiSgFiSJyVJo/H156CSZOhPR0SEyE++51XNPsPeKeHA8fLyK9fSvuurIFz7ZcR8e4jrx+8jiG\\ndx9OlGl1MBERBYkictTYsQPeeMMHh3PmQPXqcOGFMHqUY0DWx0T9bRzMnUt6QlPG/y6OZ9qs4bjm\\nPXiz/+Nc0PkCoqOiI/0RREQqjAobJJrZqcCXIS7tcM41CMrXEHgIOB+oBcwEbnLOLQxHOUUkspyD\\n6dP94+S33oI9e6B7d3jySRgx3NHoxy/grrtg1iy2N2/E+EtiebbjRk5I6McH/V/lrA5naTkbEZEQ\\nKmyQGORPwPdBP+cWvDD/l/0DIBG4AUgH7gC+NLOezrk1YSyniITRzz/Dm29CSgr88gvUqwdXXAGj\\nR0NSEti302HYOPjqK3Y0juXuobV5uts2BnQ4nc/638kpCacoOBQROYDKECQucc7NKuHaEOAkYKBz\\n7ksAM5sJrAT+gg8wReQo8euvPjB8801YsAAgH/gfxxwzlQce6MPo0ZfC99/DmePgP/9hZ8Pa3HtO\\ndZ7usZMzu5/Pt7+5gxNanhDhTyEiUjlUhiDxQIYA6woCRADn3A4z+wA4DwWJIpXe8uX+MfLkyfDj\\njz6tY8dNVKv2ADk5bwDr2boVXri+Jr999iFaz53Lrtia3D84mqeT9nB+7+HM+c1f6dakW0Q/h4hI\\nZVMZpvClmFmemW01s0lmFh90rSuwKMR7FgPxZlY3PEUUkbK0ahU89JB/bNy+PdxxB9SsCY89BqtX\\nw969J5CT8yiwnmOBycCsrCzqLZzL+IFGwp/ySL9uNPNv/pWJF0xUgCgichgqck/iDuAR4GtgJ9AL\\nuBOYaWa9nHObgEbAqhDv3RY4NwR2lX9RReRIrV5d2GP43Xc+7YQT4OGHYdgwSEgozJuWlkY/4GZg\\nKJAZA/f1g0eTYOTgG1nQ7xZaxraMwKcQETl6VNgg0Tk3D5gXlPS1mX0DfIefpDLucO9tZmOAMQDx\\n8fEHyS0i5WXtWnj7bR8Yzpzp044/Hh54AC66CNq0KfKG3FyYMoU51avRe28226rDAyfAo71h60Jo\\nNa0Vjz76aNg/h4jI0ajCBomhOOfmmtkvQMHI83R8b2FRjYKuh7rPBGACQFJSkivrcopIyVasgA8/\\n9L2G06f7tJ494e9/94Fh+/Yh3rRzJ7z0EjmPPUK11Wup38i4bhC8mgCZ84F/Qe3o2vxzwj/D+VFE\\nRI5qlSpIDGEx8NsQ6V2ANOecHjWLRFh2tg8Gp02Djz7yS9cAdOsG993nA8NOnUp4c1oaeY8/Tv4L\\nz1Nt1x5mxsNjl0VRbcj5tMvoSFzyJFanrSY+Pp7k5GRGjBgRts8lInK0q1RBopklAZ2AtwNJU4GR\\nZnaKc+7rQJ5Y4FxgUmRKKSIbNsDHH/vA8NNPISPD735y6qnwxz/CWWeV0GNY4Pvv2fXP+6j13oc4\\nHG91gTdOb0rf82/g2V6jaF6vOQD/uOofYfk8IiJVUYUNEs1sIrAcPy6xYOLKHcBa4MlAtqn4HVYm\\nmtltFC6mbcCD4S6zSFWVn++3wSvoLZwzx6e3aAGXXgpnnw2DBkHdA603kJdH3ntT2P6P8RzzwxLy\\nasBjfeGnSwcx7Iybea/dYG2bJyISRhU2SMQ/Sr4MuBGoDWwA3gX+5pzbAuCcyzezc4CHgWeBmvig\\ncYBzbnVESi1SRezY4XsJp03zvYabNoEZ9O0L99/vA8MePXxasJSUFMaOHUtaWhrx8fE8MG4cv01f\\nj3vsURqtS2dnA3jivFhqXPVHrvjNdbSu3zoyH1BEpIoz56r2vI2kpCQ3p6DbQ0RK5JwfTzhtmj+m\\nT/eTjRs2hDPO8I+QzzgD4uJKvkdKSgpjxowhMzOTlsD1DeDqTGiYDTNawRdDe9B9zDjO7nIeMVEV\\n+TusiEhkmNkPzrmksPwuBYkKEkVKsmoVfPll4bEmsBt69+6+p/Dss33PYUwp47k2CQkkbkvjylpw\\n8VaIcvBuB/hX89pMmLKQtg3blttnERE5GoQzSNRXdRHZZ82a/YPCVat8elycn3QyaJDvMTzU5UVX\\nL/yWVU/ew+fpabTdBdtz4JlO8EQurFoO9useBYgiIhWMgkSRKmzDhv2DwmXLfHrDhj4ovPlmGDAA\\nunSBqEPcxHPNpmXMf/5e4ia/T5+fdtIa+KKVcVdTx5RNkLWkMG98gha1FxGpaBQkilQhmzfDV18V\\nBoUFaxbGxsLJJ/vlaQYM8BNODjUoBNiQsZ6vpzxOzGuvM3DGes7OgvWNqjFj5CDi/zSO9YvX8P6Y\\nMWRlZu57T+3atUlOTi6bDygiImVGQaLIUWzjRpgxozAwXLjQp9epA/37w8iRPijs1av04wqL2rx7\\nMx/OfI1dr/6L/p8t45KNsDfG+PXU49j9x5todf4VNA9EnCN6+vcEz27WItgiIhWTJq5o4oocJbKz\\nYf58vwfyrFn+XDCmsFYtOOkkHxAOGABJSVCt2uH/rm17tvHeondY9uZz9Pr4R4b87KiRB2s7tSBq\\n1GiaX3WTf2YtIiJlShNXROSg1q7dPyD84QfYu9dfa9kS+vWD66/3s4+TkqBGjcP/XSkpKfz1nr+y\\nps4aunSozuUbcvjdj45RGbA7thY7R11A3HW30bJHj7L5cCIiEnEKEkUqgawsmDvXB4QFQWHBcjQ1\\nasDxx8N11/nAsG9faNXqyH9nvsvnh3U/8MC7DzD9u3cZ0tExYhGc8lY2ecCK7h1x45OpM2QIdapX\\nP/JfKCIiFYqCRJEKxjlYuRK++64wIJw3D3Jy/PXERPjNbwoDwp49/b7IZWHT7k18uvxTPln2CQt+\\n+IhT56ZzwxKYnAbRDpbGwF+B14FqO/eyatiwsvnFIiJS4ShIFImgnBxYssQHgT/+WHjescNfr1UL\\n+vTxS9H07euPZs3K7vfn5ucye81sPln2CZ8s/4T0RXO44Ce48ZcYktJyAVhkcL+Dd4CFuYXvtbS0\\nsiuIiIhUOAoSRcJk925YsMAHggXHokWF4whr1fJLzwwf7nsHk5L8ziZHMsEklHUZ63xQuOwT/rv8\\nU1qs3sGwJcakZbXpENjx3B3fA665EC64gHMGDyY1NbXYfeIPdUVtERGpVBQkipSDrVv3DwbnzYNf\\nfoH8fH+9USO/7MwNN/hzr17QsSNER5d9WbLzspmxegYf//oxnyz/hAUbFtB7PfxheV2e+Dma5mvB\\nGdj/9YSbLoShQ7HExH3vT05O3rffcgGtbSgicvRTkChyBPbsgaVLYfFi+Oknvw7hvHmFk0oAWrf2\\nQeAllxQGhK1bg1n5lGlX9i5mr5nN9LTpfLv6W2aumcnurF30XxvN2DUt+O2ChjRYn46L3oOdeirc\\neQE2dCg0bx7yfgVrGGptQxGRqkXrJGqdRCmFPXv87iQFwWDBecWKwt7BmBjo0KEwEOzVyz82PuaY\\n8i3bhl0b+DbtW6anTWf66unMWz+PPJdHbBZctCaOvjN3cFZqDi1yIS86mujBg+HCC2HIEL8ps4iI\\nVBpaJ1EkQjIzSw4GC75PxcT4R8O9esGIEdC1q9/buEOHsptlXBLnHEu3Lt3XSzg9bTrLtvkNl+ta\\nDX6/tzMPrPk/ei3aSv0ffyYqfwu7gU/wE0++rF6dh4cPVy+giIgclHoS1ZNY5TgH69bBsmXw66/+\\nWLLEB4QrVxYGg9Wq+WCwIAgMDgbLejJJSbLzspm7fq7vJQwEhlsytwAQV+sYLonpyQWr69Fr0RYa\\nzJ6PZWT459hJSTy9dClv79zJTCA76J4JCQmsKtiKRUREKpVw9iQqSFSQeFRyDjZsKAwCgwPCZct8\\nj2GB6tVDB4Pt24cvGAS/ePXybcuZu34u8zbMY9aaWcxeO5us3CwA2jdqz5mxxzN0bSy9F20l9n/f\\nYQWDH9u2hdNPh9NOg4EDoVEjoqKiCPXv28zIL3hGLiIilYoeN4uUgnOwaVNh8BccBC5bBrt2Feat\\nVs3HUR06+BiqQ4fCo3Xr8plVfCA5eTn8tPkn5m2Yty8onL9hPhnZGb68UdXo0awHN3S7knM3NaD3\\noq3UmTID5k/2N2jY0H+Qu+7ywWHbtsV+R3x8vJauERGRw6YgUSq07dth1arQx4oVkJFRmDcmBtq0\\n8YHfySfvHwjGx/vrkZCZk8mCjQt8MLh+HvM2zGPhpoVk5/mHwHWq1aFHsx5c0eMKTojtTPR7P7Du\\n5XfplT6H/syhBvgo96STIDnZB4W9ex80stXSNSIiciQUJEpEHSgIXLWqcOeRAnXq+EAwMRH6998/\\nEExICO/j4VDS96Qzb8O8fcHg3PVzWbp1KfnOP95tVKsRvZr14s8n/pleTXpw4u4GJC7ZQNSs2TDr\\nG9yiZ7HAI+IFwNPA/2rU4NJnnuHS0aMPqSxaukZERI6ExiRqTGK52bvXTxBZs8Yfa9fC6tWQmlq6\\nIDDU0ahR+a0vWFrOOdZlrGPJliX8vOVnlmxews9b/Xn9rvX78rWKbUWvZr3o1awXvZv3pnettrRa\\nshabNctvyjx7to+SARo0gBNP5LFZs/hkxw5mA8FVo8kmIiICmrgSVgoSD8+uXYWBX0EQWPTnzZuL\\nv69u3ZIDwIoSBBbIycthefpyHwRu+XlfUPjzlp/3jR0EiK0RS+e4znRu3JnOcZ3p2awnvRofR+PU\\nzTBzpg8IZ83yU6jBf8Bu3aBfP78Zc79+fuZMVJQmm4iIyAFp4opUKE89BT/+uH8gWLQHEPyi0a1a\\n+aNPn8LXBUfLlhAbG/7yH8yOrB38svWXwp7BwHnZtmXk5ufuy9cqthXHxh3LH3r+gWPjjqVzXGeO\\njTuWZrUa88Hjj/PxHQ+Qs+VVatesSQOALD8rmWOO8YHgiBH+3KcP1KsXsiyabCIiIhWFgkQ5qClT\\n/ALTrVpBp04waJAP+IIDwBYtoFatSJc0tKzcLFK3p7Jy+0pWpq/056DX2/Zs25c3JiqGDo060Dmu\\nMxcce4EPBht3ptMxnahXo56fTr1wIUxfAAtfhwULyF24kCHZ2QwBcoH5WVm8HBNDt2uu4aRbboF2\\n7UrdParJJiIiUlEoSJSD+vzzivMIOJS8/DzWZqwtDAAD5xXpK1i5fSXrMtbtl796dHUSGyTSpkEb\\n+rToQ5uGbeh4TEc6x3WmbcO2VIuu5vfh++knmLsAFk7ygeGCBT5ILNC0KXTvzqs1ajA9O5uFwE9A\\nFkBuLgkff8yq5547pM+iySYiIlJRaEyixiRWaPkuny2ZW1i7cy1rM9bud07bmcbK9JWk7UgjJz9n\\n33sMo3X91rRp0IY2Ddv4c9Dr5vWaE2VRAEx67TUm3HknDdeto3/9+lzYqRMJO3b4BRcLxgDWrOnH\\nEHbvDscd58/du0OTJgAaRygiImGjiSthpCAxcrJys0IGf2szCl+vy1i3XwAIEGVRNK3TtDAQDA4G\\nG7Yhvn481aODNlHOyvL77S1bBsuX71ttO2PePGpt2rSvOz0fWGFG9eOPJ/6sswoDwnbtDrgmYWJi\\nYshxhJqRLCIiZU0TV6TSysrNYvPuzWzavWm/Y3OmT9u4e+O+QDB4LGCBOtXq0DK2JS3rtaR/Qn9a\\n1vOvC9Jaxrbki6lfMP6u8Xyf9j0b4zdybvK5jOh3vl9de8FCWDalcNuVZcv8ujvBX4bq14cOHfhy\\n1y7mA8vxj4kXA5nOkbB5M6vuuafUn1njCEVE5GiknkT1JB7U1sytbNi1oVjgt2n3JjZl7v/zzr07\\nQ96jZkxNmtRpQpM6TWhRr0XI4K9lvZbE1ojFig6AdA527oQ1a/ji//0/3nr8cRpnZ5MItAM6mNGi\\naDuOi/ObL4c6AuvslOVj4pSUFI0jFBGRcqfHzWGkIPHgTnjhBL5f9/1+aVEWRePajfcFfiUdBXnq\\nVq/LpEmTigdSw4fDli2hF10MTgveiDlgPfArsAzY0qABf3n+eR8EtmvnF6c+CD0mFhGRykZBYhgp\\nSDywlJQUbnr+Jjanb6Zp3abcfPXNjLpkFI1qNdo3+SOk3bv9atqBY+b77/PhK69QPyeHlkAroLUZ\\nCTExROfsP+aQ6Gi/pk7RdXZataL/pZeyGlgHBL/rcHv/Qj0mnjBhgnoBRUSkQtKYxENgZq2Bx4DT\\nAQM+A250zqVFtGBHgeAgqi5Qm4189ON4Tli0kVO7dt0vCGTzZr88TMHrPXv2u1e/wJEFrAXWADOd\\n49Natbjm4Yf3DwabNi1xosjq228vs8WmtdyMiIhIySp1T6KZ1QbmA3uBuwAH3A/UBo5zzu0+2D3U\\nk1iygsexM/ABXki1akHjxoVHkyb7/xw42vXrxyag6EPjQ+0BVO+fiIhUZepJLL2rgLZAJ+fcMgAz\\nW4AfqnY18GgEy1bppaX5ztiXgHeBzYFjCzB7xQofENapU6p75SUksKsMegDV+4/dhzMAAAugSURB\\nVCciIhIelb0n8XOgpnPupCLpXwM450452D3Uk1iyspzYoR5AERGRIxfOnsQDzDyoFLoCi0KkLwa6\\nhLksR53k5GRq1669X9rhrv83YsQIJkyYQEJCAmZGQkKCAkQREZEKrLI/bm4EpIdI3wY0LOlNZjYG\\nGAOHN+GhqijrR7sjRoxQUCgiIlJJVPYg8bA45yYAE8A/bo5wcSo0BXYiIiJVU2V/3JxO6B7DknoY\\nRURERKQUKnuQuBg/LrGoLvjteEVERETkMFT2IHEq0NfM2hYkmFkicFLgmoiIiIgchsoeJL4ArALe\\nN7PzzGwI8D6wGvhXJAsmIiIiUplV6iAxsKPKQOAX4HUgBVgJDHTOFd3cQ0RERERKqdLPbg7s0Xxh\\npMshIiIicjSp1D2JIiIiIlI+FCSKiIiISDEKEkVERESkGAWJIiIiIlKMOVe1d6UzswxgaaTLUcXE\\nAVsiXYgqRnUefqrz8FOdh5/qPPw6OefqheMXVfrZzWVgqXMuKdKFqErMbI7qPLxU5+GnOg8/1Xn4\\nqc7Dz8zmhOt36XGziIiIiBSjIFFEREREilGQCBMiXYAqSHUefqrz8FOdh5/qPPxU5+EXtjqv8hNX\\nRERERKQ49SSKiIiISDGVMkg0s1Zm9pSZzTSzTDNzZpZYJM+rgfRQx89F8paUr2eRfFFmdoeZrTKz\\nLDObb2ZVYt/o0tR5IF9XM3vXzNaZ2W4zW2xmt5pZTJF8Nc3sITNbb2Z7Avc9OcT9VOdlV+dq5wdx\\nCHXe08w+MbNdZrbTzKaaWfsQ+dTOD6Ic6lzt/ADMbJiZvWdmqwNtcqmZ/cPM6hXJ19DMXjSzLYG/\\nK5+ZWfcQ91MbP4hyqPPwtXHnXKU7gFOBjcBHwH8AByQWydMO6FvkuDSQ98EieR3wSoj8tYvkSwb2\\nArcCA4B/AfnAWZGukwpS5y2AzcCPwMXAwECd5QMPFMmbAmwHrgIGAe8Ce4CeqvNyq3O187Kp8w5A\\nBjATOA8YBiwA1gFNiuRVOw9/naudH7i+ZwHvAJcH6v7GQBudBUQF8hgwHVgDXAacAXyNXw+xldp4\\nxOs8bG084pV3mBUeFfT6ylB/VEp437hA3q4hKvz+g7y3SaCy7ymS/jmwINJ1UhHqHBgTSO9UJP3f\\nwPqgn3sE8o0MSovBL2o+VXVe9nUeSFM7L5s6fzHwB75BUForIIugL6Bq5+Gv80C62vmBP3vjEGlX\\nBOptYODn8wI/DwjKUx/YBjwZlKY2HuY6D6SHrY1XysfNzrn8w3zrFcAPzrnFh/HewUB1YGKR9IlA\\ndzNrc5hlqhRKWefVA+ftRdK3s//QhiFADjA56P65+MBmsJnVCCSrzg+utHVeWqrzg+sLzHTO7atz\\n59waYBEwNCif2nkplHGdl1aVrXPn3OYQyd8Hzi0D5yHAOufcl0Hv2wF8gA9mCMqnNn4QZVznpVUm\\ndV4pg8TDYWYnAe2B10rI8kcz2xsYE/OFmfUvcr0rPipfViS9IODsUnalrbTewneNP2Nmbcws1syG\\nAr8DHgnK1xVY6ZzLLPL+xfhG3T4on+r8wEpb5wXUzo9cHpAdIn0v0M7MagZ+VjsvO6Wt8wJq54fm\\nlMB5SeDcFR+AF7UYiDezukH51MYPz+HWeYGwtPEqEyTiexFzgDdCXJsIXAuchn98dwzwhZmdGpSn\\nEbDdBfprg2wLul6lOec2Av2AzsAKYAd+HMYDzrkHg7I2AtJD3KJoXarOD+IQ6hzUzsvKUuB4M6tW\\nkBAYgN4VP66oYSBZ7bzslLbOQe38kJhZS+Be4DPnXMF2bwdru2rjR+AI6xzC2MarxN7NgW+ZFwMf\\nOueKbUTunPtd0I//M7P38RH9fUDR6FxKYGaN8YOWd+MHlm/FT6S4y8z2OuceiGT5jkaHUudq52Xm\\nSeAi4HkzG4//O/oIUPBN/3CHw0jJSl3nauelF+ideh/IBUZGuDhVQlnUeTjbeFXpSRwCNKDkR837\\ncc5lANOAPkHJ6UADM7Mi2Qui8W3IX4BEYLBz7h3n3FfOufHAQ8B9ZhYXyJfO/t+KChStS9X5wZW2\\nzotROz88zrnpwHX4oHwNsAo/wPw1/CPR4Pardl4GDqHOQ71X7TwEM6uFH+/WFv/3Y03Q5YO13fRS\\n5lMbD1JGdV5MebbxqhIk/h4/buujI7jHYqAGfmmdYAXP9X86gnsfLboDy51zRRvzd0A1CsenLAba\\nmFntIvm64P/gLwvKpzo/sNLWeWmpzkvBOfcsfvZgNyDeOXc6fjmi2c65nEA2tfMyVMo6L60qXeeB\\nx/ZvA0n45VAWFsmyGP8ov6guQJpzbldQPrXxUijDOi+tMqnzoz5INLOm+Fk+k0r7h8TMYoFz8P/R\\nFvgEP6ZxRJHslwOLnHMry6C4ld0G/CDyot+GTgyc1wbOH+ADmIsKMphf+PkS4FPn3N5Asur84Epb\\n58WonR8Z59xe59xi59zqwIK3pwHPBWVROy9jpajzYtTO92dmUfi1DQcC5zvnZoXINhVoaWanBL0v\\nFjg3cK2A2ngplHGdh7p/ubXxSjsm0cyGBV4eHzifaWabgc3Oua+Dso4AoinhUbOZ3YrvbfkSv6Br\\nAn7hyWYEVa5zbpOZPQrcYWYZwFz8P4SB+MfZR71S1Pnz+Dr71Mwewo+POxVfn1Occ6sBnHPzzGwy\\n8Hjg29VK4I9AG1Tn+ymrOlc7L72D1bmZtcK31xn42YNJwB3Au865fRPj1M5Lr6zqXO28VJ7BB3XJ\\nwG4z6xt0bU3gEehU/MLlE83sNvyjyzvwk4T2TYhTGy+1MqvzsLfx0i6oWNEO/GKSoY6viuSbDyw8\\nwH3OBb7FP47Owf8nOxU4IUTeaOAuIBX/h2oBMCzSdVGR6hy/ntlHwHr8ZIrFgTqrVeRetYBH8T1h\\nWcBs4FTVefnUudp52dU50BT4LFCXe/GPbW4BYkLcS+08jHWudl6qul51gPq+OyhfI+Bl/Ni1TPwi\\nzD1C3E9tPIx1Hu42boEbiYiIiIjsc9SPSRQRERGRQ6cgUURERESKUZAoIiIiIsUoSBQRERGRYhQk\\nioiIiEgxChJFREREpBgFiSIiAWb2tpltC+zUVPTaqWaWb2Z/jkTZRETCTeskiogEBILDn4AvnHPB\\nW43Vwi9Euwno75zLj1ARRUTCRj2JIiIBzrmNwJ+BYWZ2ftClu4FWwKhwBYhmFh3YB1dEJCIUJIqI\\nBHHOTQSmAc+YWX0z643fAu5u59zS4LxmdomZfWdmmWaWbmb/NrOWRfJcYWZfm9lmM8swsx/MbHiR\\nPDXNzJnZeDMbZ2apQDbQoXw/rYhIyfS4WUSkiECgtxiYAvQEcoG+zrm8oDw34vesfQF4D2gA3Ivf\\nj7Wncy4zkO9u/D6rvwL5wADgdmC0c+7VQJ6awB5gHbAUeAq/D+53zrmt5ftpRURCU5AoIhKCmV2J\\nDwBzgOOdcwuDrjUA1gKvOeeuDUrviB/TeL1z7vkQ94zCP8F5BejonDsxkF4QJKYG0rPL7YOJiJSS\\nHjeLiITgnHsRWA+8FxwgBvQHagMpZhZTcAArAsfJBRnN7Fgze9PM1uF7JHOAy4FOIX7tRwoQRaSi\\n0KBoEZGSZQeOopoEztNLeN9K2Nfj+BmwDbgtkJ4N3AgMC/G+9UdSWBGRsqQgUUTk0BWMExyOH2tY\\n1M7AuT/QEjjfOTen4KKZVSvhvhr/IyIVhoJEEZFD9w1+DGFb59wbB8hXO3DOKUgwsybAWeVYNhGR\\nMqEgUUTkEDnntpnZX4FHzKwF8B8gA99rOAD42Dn3NvA/YDfwLzO7F4gFxgMb8esuiohUWAoSRUQO\\ng3PuycB6hjcDVwDR+BnPXwMLA3nWmdmFwIPAO8Aa/LI5CfhxiSIiFZaWwBERERGRYrQEjoiIiIgU\\noyBRRERERIpRkCgiIiIixShIFBEREZFiFCSKiIiISDEKEkVERESkGAWJIiIiIlKMgkQRERERKUZB\\nooiIiIgU8/8BVx9Zg9Lmgh4AAAAASUVORK5CYII=\\n",\
      "text/plain": [\
       "<matplotlib.figure.Figure at 0x8edfa58>"\
      ]\
     \},\
     "metadata": \{\},\
     "output_type": "display_data"\
    \}\
   ],\
   "source": [\
    "%matplotlib inline \\n",\
    "import numpy as np\\n",\
    "import matplotlib.pyplot as plt\\n",\
    "from scipy.optimize import curve_fit\\n",\
    "\\n",\
    "#This class can be called to alter the text of a printed line\\n",\
    "class color:\\n",\
    "   PURPLE = '\\\\033[95m'\\n",\
    "   CYAN = '\\\\033[96m'\\n",\
    "   DARKCYAN = '\\\\033[36m'\\n",\
    "   BLUE = '\\\\033[94m'\\n",\
    "   GREEN = '\\\\033[92m'\\n",\
    "   YELLOW = '\\\\033[93m'\\n",\
    "   RED = '\\\\033[91m'\\n",\
    "   BOLD = '\\\\033[1m'\\n",\
    "   UNDERLINE = '\\\\033[4m'\\n",\
    "   END = '\\\\033[0m'\\n",\
    "\\n",\
    "\\n",\
    "#--------------------------------------------------\\n",\
    "# Read and scale US Population Data.\\n",\
    "#--------------------------------------------------\\n",\
    "CensusFile = open('USPopulation.csv', 'r') #Don't you dare overwrite this file!\\n",\
    "N = 23 # number of data points\\n",\
    "i = 0\\n",\
    "j = 0\\n",\
    "USYears = np.zeros([N], dtype=int)\\n",\
    "USPop0 = np.zeros([N], dtype=int)\\n",\
    "for line in CensusFile:\\n",\
    "    if i == 0 or i==1:\\n",\
    "        i=i+1\\n",\
    "    else:\\n",\
    "        values = line.split(',')\\n",\
    "        USYears[j] = int(values[0])\\n",\
    "        USPop0[j] = int(values[1])\\n",\
    "        j = j+1\\n",\
    "        i = i+1\\n",\
    "\\n",\
    "CensusFile.close()\\n",\
    "USPop = USPop0/1.e6 #population as a floating point number in millions\\n",\
    "\\n",\
    "#----------------------------------\\n",\
    "# Find the PPGR and PolyFit values\\n",\
    "#----------------------------------\\n",\
    "\\n",\
    "#Declare the array to store my PPGR values\\n",\
    "M = N-2 #number of data points - since the two end points aren't between two points\\n",\
    "PPGR = np.zeros([M])\\n",\
    "\\n",\
    "#This for loop will find the PPGR between any two points with one point between them.\\n",\
    "for k in range(21):\\n",\
    "    PPGR[k] =  (1/USPop[k+1])*((USPop[k+2]-USPop[k])/(USYears[k+2]-USYears[k]))\\n",\
    "    k = k+1\\n",\
    "\\n",\
    "#Caluculate the average of all of the values just generated\\n",\
    "avgPPGR = np.average(PPGR)\\n",\
    "\\n",\
    "#Time to start making the best fit line. First we will use np.polyfit to find the slope and y-intercept of the line\\n",\
    "USPopLineCoef = np.polyfit(USPop[1:N-1],PPGR,1)\\n",\
    "\\n",\
    "#If something seems weird, uncomment the next line to view the line coefficients\\n",\
    "#print (USPopLineCoef)\\n",\
    "\\n",\
    "#Next, I will use the values of USPop as my x-values for a function of the best fit line\\n",\
    "USPopLine = USPopLineCoef[0]*USPop + USPopLineCoef[1]\\n",\
    "\\n",\
    "\\n",\
    "#------------------------------------------------------------------------------------------\\n",\
    "# Time to make the functions of our models\\n",\
    "#------------------------------------------------------------------------------------------\\n",\
    "\\n",\
    "#Exponential model\\n",\
    "def US_exp(t,P0,r):\\n",\
    "    P = P0*np.exp(r*t)\\n",\
    "    return P\\n",\
    "\\n",\
    "#Calculating L and r (estimates) for logistic model\\n",\
    "#L = (-USPopLineCoef[1])/USPopLineCoef[0]\\n",\
    "#r = USPopLineCoef[1]\\n",\
    "\\n",\
    "#Logistic Model\\n",\
    "def US_log(t,P0,r,L):\\n",\
    "    A = ((L-P0)/P0)\\n",\
    "    T = L\\n",\
    "    B = 1 + A*np.exp(-r*t)\\n",\
    "    return T/B\\n",\
    "\\n",\
    "#Gompertz Model\\n",\
    "def US_Gomp(t,P0,r,L):\\n",\
    "    rG = np.exp(-r*t)\\n",\
    "    log = np.log(L/P0)\\n",\
    "    exp = -log*rG\\n",\
    "    return L*np.exp(exp)\\n",\
    "\\n",\
    "#---------------------------------\\n",\
    "# Population graph\\n",\
    "#---------------------------------\\n",\
    "\\n",\
    "#plt.figure(figsize=(8,6))\\n",\
    "#plt.rc('xtick', labelsize=16) \\n",\
    "#plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#plt.plot(USYears, USPop, 'o', color=('#32CD32'), label='data')\\n",\
    "#plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "#plt.xlabel('Year', fontsize=16)\\n",\
    "#plt.title('United States Population Data 1790-2010', fontsize=20)\\n",\
    "#plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([1750, 2050])\\n",\
    "#plt.savefig('USPopData.png')\\n",\
    "#plt.show()\\n",\
    "#plt.close()\\n",\
    "\\n",\
    "#----- Estimating the upper limit of the population, L ---------\\n",\
    "L = 500\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Exponential\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate parameter values for Exponential model ------\\n",\
    "a,b = np.polyfit(USYears-2010,np.log(USPop),1)\\n",\
    "#print \\"a =\\", a,\\"b =\\", b\\n",\
    "\\n",\
    "r_exp_lin = a\\n",\
    "P0_exp_lin = np.exp(b)\\n",\
    "\\n",\
    "#------- Take estimate and create the model -------------\\n",\
    "\\n",\
    "eopt, ecov = curve_fit(US_exp, USYears-2010, USPop, p0=(P0_exp_lin,r_exp_lin))\\n",\
    "#print \\"popt =\\", popt, \\"pcov =\\", pcov\\n",\
    "\\n",\
    "P_0exp = eopt[0]\\n",\
    "r_exp = eopt[1]\\n",\
    "P_exp = US_exp(USYears-2010, P_0exp, r_exp)\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Logistic\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate paramater values for Logistic model ---------\\n",\
    "c,d = np.polyfit(USYears-2010, np.log((L/USPop)-1),1)\\n",\
    "\\n",\
    "print \\"c = \\",c\\n",\
    "print \\"d = \\",d\\n",\
    "\\n",\
    "r_log_lin = -c\\n",\
    "P0_log_lin = L/(np.exp(d)+1)\\n",\
    "\\n",\
    "\\n",\
    "#------- Take estimate and create logistic\\n",\
    "lopt, lcov = curve_fit(US_log, USYears-2010, USPop, p0=(P0_log_lin,r_log_lin,L))\\n",\
    "#print \\"lopt =\\", lopt, \\"lcov =\\", lcov\\n",\
    "\\n",\
    "P_0log = lopt[0]\\n",\
    "r_log = lopt[1]\\n",\
    "L_log = lopt[2]\\n",\
    "P_log = US_log(USYears-2010, P_0log, r_log, L_log)\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Gompertz\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate parameter values for Gompertz model -----------\\n",\
    "e,f = np.polyfit(USYears-2010,np.log(np.log(L/USPop)),1)\\n",\
    "\\n",\
    "r_gomp_lin = -e\\n",\
    "P_0gomp_lin = L*(np.exp(-np.exp(f)))\\n",\
    "\\n",\
    "#print (\\"r_gom_lin =\\", r_gom_lin)\\n",\
    "#print (\\"P_0gom_lin =\\", P_0gom_lin)\\n",\
    "\\n",\
    "#------- Take estimate and create Gompertz --------\\n",\
    "gopt, gcov = curve_fit(US_Gomp, USYears-2010, USPop, p0=(P_0gomp_lin, r_gomp_lin,L))\\n",\
    "#print \\"gopt =\\", gopt\\n",\
    "#print \\"gcov =\\", gcov\\n",\
    "\\n",\
    "P_0gomp = gopt[0]\\n",\
    "r_gomp = gopt[1]\\n",\
    "L_gomp = gopt[2]\\n",\
    "P_gomp = US_Gomp(USYears-2010, P_0gomp, r_gomp, L_gomp) \\n",\
    "\\n",\
    "#------------------------\\n",\
    "# Plotting the Graphs\\n",\
    "#------------------------\\n",\
    "\\n",\
    "plt.figure(figsize=(10,6))\\n",\
    "plt.rc('xtick', labelsize=16) \\n",\
    "plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#Plotting the data points\\n",\
    "plt.plot(USYears, USPop, 'o', color='k', label='data')\\n",\
    "#First, draw the exponential model,\\n",\
    "plt.plot(USYears, P_exp, color='b', label='exponential')\\n",\
    "#then the logistic model,\\n",\
    "plt.plot(USYears, P_log, color='g', label=\\"logistic\\")\\n",\
    "#and finally Gompertz model.\\n",\
    "plt.plot(USYears, P_gomp, color='r', label = 'Gompertz')\\n",\
    "plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "plt.xlabel('Year', fontsize=16)\\n",\
    "plt.title('United States Population Data 1790-2010', fontsize=20)\\n",\
    "plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([-250, 10])\\n",\
    "plt.xlim([1750, 2050])\\n",\
    "plt.savefig('USPopModel.png')\\n",\
    "plt.show()\\n",\
    "plt.close()\\n",\
    "\\n",\
    "#-------------------------------------------------------------------\\n",\
    "# Finding the Coefficients of Determination for these three models\\n",\
    "#-------------------------------------------------------------------\\n",\
    "\\n",\
    "#R squared (coefficient of determination) for Exponential\\n",\
    "numsum = np.zeros([3])\\n",\
    "densum = np.zeros([3])\\n",\
    "for i in range(23): #For all of the data points\\n",\
    "    for j in range(3): #For all three sets of data\\n",\
    "        if j==0:\\n",\
    "            numsum[j] = numsum[j] + (USPop[i]-US_exp(USYears[i]-2010, P_0exp, r_exp))**2\\n",\
    "            densum[j] = densum[j] + (USPop[i]-np.average(USPop))**2\\n",\
    "        elif j==1:\\n",\
    "            numsum[j] = numsum[j] + (USPop[i]-US_log(USYears[i]-2010, P_0log, r_log,L_log))**2\\n",\
    "            densum[j] = densum[j] + (USPop[i]-np.average(USPop))**2\\n",\
    "        else:\\n",\
    "            numsum[j] = numsum[j] + (USPop[i]-US_Gomp(USYears[i]-2010, P_0gomp, r_gomp,L_gomp))**2\\n",\
    "            densum[j] = densum[j] + (USPop[i]-np.average(USPop))**2\\n",\
    "    \\n",\
    "expR2 = 1 - (numsum[0]/densum[0])\\n",\
    "logR2 = 1 - (numsum[1]/densum[1])\\n",\
    "gompR2 = 1 - (numsum[2]/densum[2])\\n",\
    "print \\"expR2 = \\", expR2\\n",\
    "print \\"logR2 = \\", logR2\\n",\
    "print \\"gompR2 = \\", gompR2\\n",\
    "\\n",\
    "#Adjusted coefficients of determinations\\n",\
    "expAR2 = 1. - (1. - expR2)*((23.-1.)/(23.-2.-1.))\\n",\
    "logAR2 = 1. - (1. - logR2)*((23.-1.)/(23.-3.-1.))\\n",\
    "gompAR2 = 1. - (1. - gompR2)*((23.-1.)/(23.-3.-1.))\\n",\
    "print \\"Adjusted Exp R2 = \\", expAR2\\n",\
    "print \\"Adjusted Log R2 = \\", logAR2\\n",\
    "print \\"Adjusted Gomp R2 = \\", gompAR2\\n",\
    "\\n",\
    "# Print the values I need for my paper\\n",\
    "print \\"\\"\\n",\
    "print \\"Exp P0 =\\", P_0exp\\n",\
    "print \\" Exp r =\\", r_exp\\n",\
    "print \\"\\"\\n",\
    "print \\"Log P0 =\\", P_0log\\n",\
    "print \\" Log r =\\", r_log\\n",\
    "print \\" Log L =\\", L_log\\n",\
    "print \\"\\"\\n",\
    "print \\"Gom P0 =\\", P_0gomp\\n",\
    "print \\" Gom r =\\", r_gomp\\n",\
    "print \\" Gom L =\\", L_gomp\\n",\
    "\\n",\
    "#------------------------------------------------------------\\n",\
    "# Working with predictions: Eliminating the last data point\\n",\
    "#------------------------------------------------------------\\n",\
    "\\n",\
    "print \\"\\",'\\\\n',\\"\\"\\n",\
    "print \\"For the following values of 2010, I eliminated the data point for 2010 and recalculated the models\\"\\n",\
    "print \\"for that year. The values were then compared by using the error function:\\"\\n",\
    "\\n",\
    "USPopPast = USPop[0:N-1]\\n",\
    "USYearsPast = USYears[0:N-1]\\n",\
    "\\n",\
    "#--------------- Exponential Model -------------------\\n",\
    "ep_opt, ep_cov = curve_fit(US_exp, USYearsPast-2000, USPopPast, p0=(P0_exp_lin,r_exp_lin))\\n",\
    "#print \\"popt =\\", popt, \\"pcov =\\", pcov\\n",\
    "\\n",\
    "P_0exp_past = ep_opt[0]\\n",\
    "r_exp_past = ep_opt[1]\\n",\
    "P_exp_past = US_exp(USYears- 2000, P_0exp_past, r_exp_past)\\n",\
    "\\n",\
    "exp_est_2010 = US_exp(10, P_0exp_past, r_exp_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Exponential\\", color.END\\n",\
    "print \\"Exponential estimation for 2010:\\", round(exp_est_2010,1)\\n",\
    "print \\"Error from actual value of 2010: \{\}%\\".format(round((np.absolute(exp_est_2010-USPop[22])/USPop[22])*100,2))\\n",\
    "\\n",\
    "#---------------- Logistic Model ---------------------\\n",\
    "lp_opt, lp_cov = curve_fit(US_log, USYearsPast-2000, USPopPast, p0=(P_0log, r_log, L_log))\\n",\
    "#print \\"lopt =\\", lopt, \\"lcov =\\", lcov\\n",\
    "\\n",\
    "P_0log_past = lp_opt[0]\\n",\
    "r_log_past = lp_opt[1]\\n",\
    "L_log_past = lp_opt[2]\\n",\
    "P_log_past = US_log(USYears-2000, P_0log_past, r_log_past, L_log_past)\\n",\
    "\\n",\
    "log_est_2010 = US_log(10, P_0log_past, r_log_past, L_log_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Logistic\\", color.END\\n",\
    "print \\"   Logistic estimation for 2010:\\", round(log_est_2010,1)\\n",\
    "print \\"Error from actual value of 2010: \{\}%\\".format(round((np.absolute(log_est_2010-USPop[22])/USPop[22])*100,2))\\n",\
    "\\n",\
    "#---------------- Gompertz Model ---------------------\\n",\
    "gp_opt, gp_cov = curve_fit(US_Gomp, USYearsPast-2000, USPopPast, p0=(P_0gomp, r_gomp, L_gomp))\\n",\
    "#print \\"gopt =\\", gopt\\n",\
    "#print \\"gcov =\\", gcov\\n",\
    "\\n",\
    "P_0gomp_past = gp_opt[0]\\n",\
    "r_gomp_past = gp_opt[1]\\n",\
    "L_gomp_past = gp_opt[2]\\n",\
    "P_gomp_past = US_Gomp(USYears-2000, P_0gomp_past, r_gomp_past, L_gomp_past) \\n",\
    "\\n",\
    "gomp_est_2010 = US_Gomp(10, P_0gomp_past, r_gomp_past, L_gomp_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Gompertz\\", color.END\\n",\
    "print \\"   Gompertz estimation for 2010:\\", round(gomp_est_2010,1)\\n",\
    "print \\"Error from actual value of 2010: \{\}%\\".format(round((np.absolute(gomp_est_2010-USPop[22])/USPop[22])*100,2))\\n",\
    "\\n",\
    "#--------------------------------------------------------------\\n",\
    "# Plotting the models with the omission, as well as predictions\\n",\
    "#--------------------------------------------------------------\\n",\
    "\\n",\
    "plt.figure(figsize=(10,6))\\n",\
    "plt.rc('xtick', labelsize=16) \\n",\
    "plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#Plotting the data points\\n",\
    "plt.plot(USYears, USPop, 'o', color='k', label='data')\\n",\
    "#First, draw the exponential model,\\n",\
    "plt.plot(USYears, P_exp_past, color='b', label='exponential')\\n",\
    "#then the logistic model,\\n",\
    "plt.plot(USYears, P_log_past, color='g', label=\\"logistic\\")\\n",\
    "#and finally Gompertz model.\\n",\
    "plt.plot(USYears, P_gomp_past, color='r', label = 'Gompertz')\\n",\
    "# ----- The next three are all the predicted values for 2010 ----\\n",\
    "plt.plot(2010, exp_est_2010, 'x', color='b', label='exponential guess')\\n",\
    "plt.plot(2010, log_est_2010, 'x', color='g', label='logistic guess')\\n",\
    "plt.plot(2010, gomp_est_2010, 'x', color='r', label='Gompertz guess')\\n",\
    "#\\n",\
    "plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "plt.xlabel('Year', fontsize=16)\\n",\
    "plt.title('Truncated United States Models with Estimations', fontsize=20)\\n",\
    "plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([-250, 10])\\n",\
    "plt.xlim([1750, 2050])\\n",\
    "plt.savefig('USPopLOO.png')\\n",\
    "plt.show()\\n",\
    "plt.close()"\
   ]\
  \},\
  \{\
   "cell_type": "code",\
   "execution_count": 1,\
   "metadata": \{\},\
   "outputs": [\
    \{\
     "ename": "SyntaxError",\
     "evalue": "Missing parentheses in call to 'print' (<ipython-input-1-d38dcf5beb9b>, line 209)",\
     "output_type": "error",\
     "traceback": [\
      "\\u001b[1;36m  File \\u001b[1;32m\\"<ipython-input-1-d38dcf5beb9b>\\"\\u001b[1;36m, line \\u001b[1;32m209\\u001b[0m\\n\\u001b[1;33m    print \\"expR2 = \\", expR2\\u001b[0m\\n\\u001b[1;37m                   ^\\u001b[0m\\n\\u001b[1;31mSyntaxError\\u001b[0m\\u001b[1;31m:\\u001b[0m Missing parentheses in call to 'print'\\n"\
     ]\
    \}\
   ],\
   "source": [\
    "%matplotlib inline \\n",\
    "import numpy as np\\n",\
    "import matplotlib.pyplot as plt\\n",\
    "from scipy.optimize import curve_fit\\n",\
    "\\n",\
    "#This class can be called to alter the text of a printed line\\n",\
    "class color:\\n",\
    "   PURPLE = '\\\\033[95m'\\n",\
    "   CYAN = '\\\\033[96m'\\n",\
    "   DARKCYAN = '\\\\033[36m'\\n",\
    "   BLUE = '\\\\033[94m'\\n",\
    "   GREEN = '\\\\033[92m'\\n",\
    "   YELLOW = '\\\\033[93m'\\n",\
    "   RED = '\\\\033[91m'\\n",\
    "   BOLD = '\\\\033[1m'\\n",\
    "   UNDERLINE = '\\\\033[4m'\\n",\
    "   END = '\\\\033[0m'\\n",\
    "\\n",\
    "\\n",\
    "#--------------------------------------------------\\n",\
    "# Read and scale US Population Data. From: https://en.wikipedia.org/wiki/Demography_of_England\\n",\
    "#--------------------------------------------------\\n",\
    "CensusFile = open('UKPopulation.csv', 'r') #Don't you dare overwrite this file!\\n",\
    "N = 43 # number of data points\\n",\
    "i = 0\\n",\
    "j = 0\\n",\
    "UKYears = np.zeros([N], dtype=int)\\n",\
    "UKPop0 = np.zeros([N], dtype=int)\\n",\
    "for line in CensusFile:\\n",\
    "    if i == 0 or i==1:\\n",\
    "        i=i+1\\n",\
    "    else:\\n",\
    "        values = line.split(',')\\n",\
    "        UKYears[j] = int(values[0])\\n",\
    "        UKPop0[j] = int(values[1])\\n",\
    "        j = j+1\\n",\
    "        i = i+1\\n",\
    "\\n",\
    "CensusFile.close()\\n",\
    "UKPop = UKPop0/1.e6 #population as a floating point number in millions\\n",\
    "\\n",\
    "#------------------------------------------------------------------------------------------\\n",\
    "# Time to make the functions of our models\\n",\
    "#------------------------------------------------------------------------------------------\\n",\
    "\\n",\
    "#Exponential model\\n",\
    "def UK_exp(t,P0,r):\\n",\
    "    P = P0*np.exp(r*t)\\n",\
    "    return P\\n",\
    "\\n",\
    "#Logistic Model\\n",\
    "def UK_log(t,P0,r,L):\\n",\
    "    A = ((L-P0)/P0)\\n",\
    "    T = L\\n",\
    "    B = 1 + A*np.exp(-r*t)\\n",\
    "    return T/B\\n",\
    "\\n",\
    "#Gompertz Model\\n",\
    "def UK_Gomp(t,P0,r,L):\\n",\
    "    rG = np.exp(-r*t)\\n",\
    "    log = np.log(L/P0)\\n",\
    "    exp = -log*rG\\n",\
    "    return L*np.exp(exp)\\n",\
    "\\n",\
    "#---------------------------------\\n",\
    "# Population graph\\n",\
    "#---------------------------------\\n",\
    "\\n",\
    "#plt.figure(figsize=(8,6))\\n",\
    "#plt.rc('xtick', labelsize=16) \\n",\
    "#plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#plt.plot(UKYears, UKPop, 'o', color=('r'), label='data')\\n",\
    "#plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "#plt.xlabel('Year', fontsize=16)\\n",\
    "#plt.title('United Kingdom Population Data 1086-2011', fontsize=20)\\n",\
    "#plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([1000, 2050])\\n",\
    "#plt.savefig('UKPopData.png')\\n",\
    "#plt.show()\\n",\
    "#plt.close()\\n",\
    "\\n",\
    "\\n",\
    "#----- Estimating the upper limit of the population, L ---------\\n",\
    "L = 100\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Exponential\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate parameter values for Exponential model ------\\n",\
    "a,b = np.polyfit(UKYears-2011,np.log(UKPop),1)\\n",\
    "#print \\"a =\\", a,\\"b =\\", b\\n",\
    "\\n",\
    "r_exp_lin = a\\n",\
    "P0_exp_lin = np.exp(b)\\n",\
    "#print \\"r, P0 = \\",r_exp_lin, P0_exp_lin\\n",\
    "\\n",\
    "#------- Take estimate and create the model -------------\\n",\
    "\\n",\
    "eopt, ecov = curve_fit(UK_exp, UKYears-2011, UKPop, p0=(P0_exp_lin,r_exp_lin))\\n",\
    "#print \\"popt =\\", popt, \\"pcov =\\", pcov\\n",\
    "\\n",\
    "P_0exp = eopt[0]\\n",\
    "r_exp = eopt[1]\\n",\
    "P_exp = UK_exp(UKYears-2011, P_0exp, r_exp)\\n",\
    "\\n",\
    "#print \\"p_exp =\\", P_exp\\n",\
    "#print UKPop\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Logistic\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate paramater values for Logistic model ---------\\n",\
    "c,d = np.polyfit(UKYears-2011, np.log((L/UKPop)-1),1)\\n",\
    "\\n",\
    "#print \\"c = \\",c\\n",\
    "#print \\"d = \\",d\\n",\
    "\\n",\
    "r_log_lin = -c\\n",\
    "P0_log_lin = L/(np.exp(d)+1)\\n",\
    "\\n",\
    "\\n",\
    "#------- Take estimate and create logistic\\n",\
    "lopt, lcov = curve_fit(UK_log, UKYears-2011, UKPop, p0=(P0_log_lin,r_log_lin,L))\\n",\
    "#print \\"lopt =\\", lopt, \\"lcov =\\", lcov\\n",\
    "\\n",\
    "P_0log = lopt[0]\\n",\
    "r_log = lopt[1]\\n",\
    "L_log = lopt[2]\\n",\
    "P_log = UK_log(UKYears-2011, P_0log, r_log, L_log)\\n",\
    "\\n",\
    "#print \\"P0 =\\", P_0log, \\"rlog\\", r_log, \\"Llog\\", L_log\\n",\
    "#print \\"\\"\\n",\
    "#print \\"lopt = \\", lopt\\n",\
    "\\n",\
    "#----------------------\\n",\
    "# Optimize Gompertz\\n",\
    "#----------------------\\n",\
    "\\n",\
    "#------- Approximate parameter values for Gompertz model -----------\\n",\
    "e,f = np.polyfit(UKYears-2011,np.log(np.log(L/UKPop)),1)\\n",\
    "\\n",\
    "r_gomp_lin = -e\\n",\
    "P_0gomp_lin = L*(np.exp(-np.exp(f)))\\n",\
    "\\n",\
    "#print (\\"r_gom_lin =\\", r_gom_lin)\\n",\
    "#print (\\"P_0gom_lin =\\", P_0gom_lin)\\n",\
    "\\n",\
    "#------- Take estimate and create Gompertz --------\\n",\
    "gopt, gcov = curve_fit(UK_Gomp, UKYears-2011, UKPop, p0=(P_0gomp_lin, r_gomp_lin,L))\\n",\
    "#print \\"gopt =\\", gopt\\n",\
    "#print \\"gcov =\\", gcov\\n",\
    "\\n",\
    "P_0gomp = gopt[0]\\n",\
    "r_gomp = gopt[1]\\n",\
    "L_gomp = gopt[2]\\n",\
    "P_gomp = UK_Gomp(UKYears-2011, P_0gomp, r_gomp, L_gomp) \\n",\
    "\\n",\
    "#------------------------\\n",\
    "# Plotting the Graphs\\n",\
    "#------------------------\\n",\
    "\\n",\
    "plt.figure(figsize=(10,6))\\n",\
    "plt.rc('xtick', labelsize=16) \\n",\
    "plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#Plotting the data points\\n",\
    "plt.plot(UKYears, UKPop, 'o', color='k', label='data')\\n",\
    "#First, draw the exponential model,\\n",\
    "plt.plot(UKYears, P_exp, color='b', label='exponential')\\n",\
    "#then the logistic model,\\n",\
    "plt.plot(UKYears, P_log, color='g', label=\\"logistic\\")\\n",\
    "#and finally Gompertz model.\\n",\
    "plt.plot(UKYears, P_gomp, color='r', label = 'Gompertz')\\n",\
    "plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "plt.xlabel('Year', fontsize=16)\\n",\
    "plt.title('United Kingdom Population Data 1086-2011', fontsize=20)\\n",\
    "plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([-250, 10])\\n",\
    "plt.xlim([1050,2050])\\n",\
    "plt.savefig('UKPopModel.png')\\n",\
    "plt.show()\\n",\
    "plt.close()\\n",\
    "\\n",\
    "#-------------------------------------------------------------------\\n",\
    "# Finding the Coefficients of Determination for these three models\\n",\
    "#-------------------------------------------------------------------\\n",\
    "\\n",\
    "#R squared (coefficient of determination) for Exponential\\n",\
    "numsum = np.zeros([3])\\n",\
    "densum = np.zeros([3])\\n",\
    "for i in range(N): #For all of the data points\\n",\
    "    for j in range(3): #For all three sets of data\\n",\
    "        if j==0:\\n",\
    "            numsum[j] = numsum[j] + (UKPop[i]-UK_exp(UKYears[i]-2011, P_0exp, r_exp))**2\\n",\
    "            densum[j] = densum[j] + (UKPop[i]-np.average(UKPop))**2\\n",\
    "        elif j==1:\\n",\
    "            numsum[j] = numsum[j] + (UKPop[i]-UK_log(UKYears[i]-2011, P_0log, r_log,L_log))**2\\n",\
    "            densum[j] = densum[j] + (UKPop[i]-np.average(UKPop))**2\\n",\
    "        else:\\n",\
    "            numsum[j] = numsum[j] + (UKPop[i]-UK_Gomp(UKYears[i]-2011, P_0gomp, r_gomp,L_gomp))**2\\n",\
    "            densum[j] = densum[j] + (UKPop[i]-np.average(UKPop))**2\\n",\
    "    \\n",\
    "expR2 = 1 - (numsum[0]/densum[0])\\n",\
    "logR2 = 1 - (numsum[1]/densum[1])\\n",\
    "gompR2 = 1 - (numsum[2]/densum[2])\\n",\
    "print \\"expR2 = \\", expR2\\n",\
    "print \\"logR2 = \\", logR2\\n",\
    "print \\"gompR2 = \\", gompR2\\n",\
    "\\n",\
    "#Adjusted coefficients of determinations\\n",\
    "expAR2 = 1. - (1. - expR2)*((23.-1.)/(23.-2.-1.))\\n",\
    "logAR2 = 1. - (1. - logR2)*((23.-1.)/(23.-3.-1.))\\n",\
    "gompAR2 = 1. - (1. - gompR2)*((23.-1.)/(23.-3.-1.))\\n",\
    "print \\"Adjusted Exp R2 = \\", expAR2\\n",\
    "print \\"Adjusted Log R2 = \\", logAR2\\n",\
    "print \\"Adjusted Gomp R2 = \\", gompAR2\\n",\
    "\\n",\
    "# Print the values I need for my paper\\n",\
    "print \\"\\"\\n",\
    "print \\"Exp P0 =\\", P_0exp\\n",\
    "print \\" Exp r =\\", r_exp\\n",\
    "print \\"\\"\\n",\
    "print \\"Log P0 =\\", P_0log\\n",\
    "print \\" Log r =\\", r_log\\n",\
    "print \\" Log L =\\", L_log\\n",\
    "print \\"\\"\\n",\
    "print \\"Gom P0 =\\", P_0gomp\\n",\
    "print \\" Gom r =\\", r_gomp\\n",\
    "print \\" Gom L =\\", L_gomp\\n",\
    "\\n",\
    "#------------------------------------------------------------\\n",\
    "# Working with predictions: Eliminating the last data point\\n",\
    "#------------------------------------------------------------\\n",\
    "\\n",\
    "print \\"\\",'\\\\n',\\"\\"\\n",\
    "print \\"For the following values of 2011, I eliminated the data point for 2011 and recalculated the models\\"\\n",\
    "print \\"for that year. The values were then compared by using the error function:\\"\\n",\
    "\\n",\
    "UKPopPast = UKPop[0:N-1]\\n",\
    "UKYearsPast = UKYears[0:N-1]\\n",\
    "\\n",\
    "#--------------- Exponential Model -------------------\\n",\
    "ep_opt, ep_cov = curve_fit(UK_exp, UKYearsPast-2001, UKPopPast, p0=(P0_exp_lin,r_exp_lin))\\n",\
    "#print \\"popt =\\", popt, \\"pcov =\\", pcov\\n",\
    "\\n",\
    "P_0exp_past = ep_opt[0]\\n",\
    "r_exp_past = ep_opt[1]\\n",\
    "P_exp_past = UK_exp(UKYears- 2001, P_0exp_past, r_exp_past)\\n",\
    "\\n",\
    "exp_est_2011 = UK_exp(10, P_0exp_past, r_exp_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Exponential\\", color.END\\n",\
    "print \\"Exponential estimation for 2011:\\", round(exp_est_2011,1)\\n",\
    "print \\"Error from actual value of 2011: \{\}%\\".format(round((np.absolute(exp_est_2011-UKPop[N-1])/UKPop[N-1])*100,2))\\n",\
    "\\n",\
    "#---------------- Logistic Model ---------------------\\n",\
    "lp_opt, lp_cov = curve_fit(UK_log, UKYearsPast-2001, UKPopPast, p0=(P_0log, r_log, L_log))\\n",\
    "#print \\"lopt =\\", lopt, \\"lcov =\\", lcov\\n",\
    "\\n",\
    "P_0log_past = lp_opt[0]\\n",\
    "r_log_past = lp_opt[1]\\n",\
    "L_log_past = lp_opt[2]\\n",\
    "P_log_past = UK_log(UKYears-2001, P_0log_past, r_log_past, L_log_past)\\n",\
    "\\n",\
    "log_est_2011 = UK_log(10, P_0log_past, r_log_past, L_log_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Logistic\\", color.END\\n",\
    "print \\"   Logistic estimation for 2010:\\", round(log_est_2011,1)\\n",\
    "print \\"Error from actual value of 2010: \{\}%\\".format(round((np.absolute(log_est_2011-UKPop[N-1])/UKPop[N-1])*100,2))\\n",\
    "\\n",\
    "#---------------- Gompertz Model ---------------------\\n",\
    "gp_opt, gp_cov = curve_fit(UK_Gomp, UKYearsPast-2001, UKPopPast, p0=(P_0gomp, r_gomp, L_gomp))\\n",\
    "#print \\"gopt =\\", gopt\\n",\
    "#print \\"gcov =\\", gcov\\n",\
    "\\n",\
    "P_0gomp_past = gp_opt[0]\\n",\
    "r_gomp_past = gp_opt[1]\\n",\
    "L_gomp_past = gp_opt[2]\\n",\
    "P_gomp_past = UK_Gomp(UKYears-2001, P_0gomp_past, r_gomp_past, L_gomp_past) \\n",\
    "\\n",\
    "gomp_est_2011 = UK_Gomp(10, P_0gomp_past, r_gomp_past, L_gomp_past)\\n",\
    "print \\"\\"\\n",\
    "print color.BOLD, \\"Gompertz\\", color.END\\n",\
    "print \\"   Gompertz estimation for 2010:\\", round(gomp_est_2011,1)\\n",\
    "print \\"Error from actual value of 2010: \{\}%\\".format(round((np.absolute(gomp_est_2011-UKPop[N-1])/UKPop[N-1])*100,2))\\n",\
    "\\n",\
    "#--------------------------------------------------------------\\n",\
    "# Plotting the models with the omission, as well as predictions\\n",\
    "#--------------------------------------------------------------\\n",\
    "\\n",\
    "plt.figure(figsize=(10,6))\\n",\
    "plt.rc('xtick', labelsize=16) \\n",\
    "plt.rc('ytick', labelsize=16)\\n",\
    "#\\n",\
    "#Plotting the data points\\n",\
    "plt.plot(UKYears, UKPop, 'o', color='k', label='data')\\n",\
    "#First, draw the exponential model,\\n",\
    "plt.plot(UKYears, P_exp_past, color='b', label='exponential')\\n",\
    "#then the logistic model,\\n",\
    "plt.plot(UKYears, P_log_past, color='g', label=\\"logistic\\")\\n",\
    "#and finally Gompertz model.\\n",\
    "plt.plot(UKYears, P_gomp_past, color='r', label = 'Gompertz')\\n",\
    "# ----- The next three are all the predicted values for 2010 ----\\n",\
    "plt.plot(2010, exp_est_2011, 'x', color='b', label='exponential guess')\\n",\
    "plt.plot(2010, log_est_2011, 'x', color='g', label='logistic guess')\\n",\
    "plt.plot(2010, gomp_est_2011, 'x', color='r', label='Gompertz guess')\\n",\
    "#\\n",\
    "plt.ylabel('Population (millions)', fontsize=16)\\n",\
    "plt.xlabel('Year', fontsize=16)\\n",\
    "plt.title('Truncated United Kingdom Models with Estimations', fontsize=20)\\n",\
    "plt.legend(loc=2, fontsize=16)\\n",\
    "#plt.xlim([-250, 10])\\n",\
    "plt.xlim([1050, 2050])\\n",\
    "plt.savefig('UKPopLOO.png')\\n",\
    "plt.show()\\n",\
    "plt.close()\\n",\
    "\\n"\
   ]\
  \}\
 ],\
 "metadata": \{\
  "kernelspec": \{\
   "display_name": "Python 3",\
   "language": "python",\
   "name": "python3"\
  \},\
  "language_info": \{\
   "codemirror_mode": \{\
    "name": "ipython",\
    "version": 3\
   \},\
   "file_extension": ".py",\
   "mimetype": "text/x-python",\
   "name": "python",\
   "nbconvert_exporter": "python",\
   "pygments_lexer": "ipython3",\
   "version": "3.6.2"\
  \}\
 \},\
 "nbformat": 4,\
 "nbformat_minor": 2\
\}\
}